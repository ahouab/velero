// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backupitemaction/v1/BackupItemAction.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	backupitemaction/v1/BackupItemAction.proto

It has these top-level messages:
	ExecuteRequest
	ExecuteResponse
	BackupItemActionAppliesToRequest
	BackupItemActionAppliesToResponse
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import generated "github.com/vmware-tanzu/velero/pkg/plugin/generated"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ExecuteRequest struct {
	Plugin string `protobuf:"bytes,1,opt,name=plugin" json:"plugin,omitempty"`
	Item   []byte `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Backup []byte `protobuf:"bytes,3,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (m *ExecuteRequest) Reset()                    { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()               {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ExecuteRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *ExecuteRequest) GetItem() []byte {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ExecuteRequest) GetBackup() []byte {
	if m != nil {
		return m.Backup
	}
	return nil
}

type ExecuteResponse struct {
	Item            []byte                          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	AdditionalItems []*generated.ResourceIdentifier `protobuf:"bytes,2,rep,name=additionalItems" json:"additionalItems,omitempty"`
}

func (m *ExecuteResponse) Reset()                    { *m = ExecuteResponse{} }
func (m *ExecuteResponse) String() string            { return proto.CompactTextString(m) }
func (*ExecuteResponse) ProtoMessage()               {}
func (*ExecuteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExecuteResponse) GetItem() []byte {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ExecuteResponse) GetAdditionalItems() []*generated.ResourceIdentifier {
	if m != nil {
		return m.AdditionalItems
	}
	return nil
}

type BackupItemActionAppliesToRequest struct {
	Plugin string `protobuf:"bytes,1,opt,name=plugin" json:"plugin,omitempty"`
}

func (m *BackupItemActionAppliesToRequest) Reset()         { *m = BackupItemActionAppliesToRequest{} }
func (m *BackupItemActionAppliesToRequest) String() string { return proto.CompactTextString(m) }
func (*BackupItemActionAppliesToRequest) ProtoMessage()    {}
func (*BackupItemActionAppliesToRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2}
}

func (m *BackupItemActionAppliesToRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

type BackupItemActionAppliesToResponse struct {
	ResourceSelector *generated.ResourceSelector `protobuf:"bytes,1,opt,name=ResourceSelector" json:"ResourceSelector,omitempty"`
}

func (m *BackupItemActionAppliesToResponse) Reset()         { *m = BackupItemActionAppliesToResponse{} }
func (m *BackupItemActionAppliesToResponse) String() string { return proto.CompactTextString(m) }
func (*BackupItemActionAppliesToResponse) ProtoMessage()    {}
func (*BackupItemActionAppliesToResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3}
}

func (m *BackupItemActionAppliesToResponse) GetResourceSelector() *generated.ResourceSelector {
	if m != nil {
		return m.ResourceSelector
	}
	return nil
}

func init() {
	proto.RegisterType((*ExecuteRequest)(nil), "v1.ExecuteRequest")
	proto.RegisterType((*ExecuteResponse)(nil), "v1.ExecuteResponse")
	proto.RegisterType((*BackupItemActionAppliesToRequest)(nil), "v1.BackupItemActionAppliesToRequest")
	proto.RegisterType((*BackupItemActionAppliesToResponse)(nil), "v1.BackupItemActionAppliesToResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BackupItemAction service

type BackupItemActionClient interface {
	AppliesTo(ctx context.Context, in *BackupItemActionAppliesToRequest, opts ...grpc.CallOption) (*BackupItemActionAppliesToResponse, error)
	Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error)
}

type backupItemActionClient struct {
	cc *grpc.ClientConn
}

func NewBackupItemActionClient(cc *grpc.ClientConn) BackupItemActionClient {
	return &backupItemActionClient{cc}
}

func (c *backupItemActionClient) AppliesTo(ctx context.Context, in *BackupItemActionAppliesToRequest, opts ...grpc.CallOption) (*BackupItemActionAppliesToResponse, error) {
	out := new(BackupItemActionAppliesToResponse)
	err := grpc.Invoke(ctx, "/v1.BackupItemAction/AppliesTo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupItemActionClient) Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error) {
	out := new(ExecuteResponse)
	err := grpc.Invoke(ctx, "/v1.BackupItemAction/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BackupItemAction service

type BackupItemActionServer interface {
	AppliesTo(context.Context, *BackupItemActionAppliesToRequest) (*BackupItemActionAppliesToResponse, error)
	Execute(context.Context, *ExecuteRequest) (*ExecuteResponse, error)
}

func RegisterBackupItemActionServer(s *grpc.Server, srv BackupItemActionServer) {
	s.RegisterService(&_BackupItemAction_serviceDesc, srv)
}

func _BackupItemAction_AppliesTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupItemActionAppliesToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupItemActionServer).AppliesTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BackupItemAction/AppliesTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupItemActionServer).AppliesTo(ctx, req.(*BackupItemActionAppliesToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupItemAction_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupItemActionServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BackupItemAction/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupItemActionServer).Execute(ctx, req.(*ExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BackupItemAction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.BackupItemAction",
	HandlerType: (*BackupItemActionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppliesTo",
			Handler:    _BackupItemAction_AppliesTo_Handler,
		},
		{
			MethodName: "Execute",
			Handler:    _BackupItemAction_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backupitemaction/v1/BackupItemAction.proto",
}

func init() { proto.RegisterFile("backupitemaction/v1/BackupItemAction.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x5f, 0x4b, 0xfb, 0x30,
	0x14, 0xa5, 0xdb, 0x8f, 0xfd, 0x58, 0x36, 0xdc, 0x88, 0x20, 0x65, 0x22, 0xd4, 0xa2, 0x30, 0x04,
	0x1b, 0x56, 0xdf, 0x7c, 0xdb, 0x40, 0xc6, 0x5e, 0xbb, 0x3d, 0x88, 0x6f, 0x59, 0x7b, 0xed, 0xc2,
	0xda, 0x24, 0xa6, 0x49, 0x15, 0x3f, 0x8d, 0x1f, 0x55, 0xfa, 0x67, 0xc5, 0xcd, 0xe1, 0xde, 0x72,
	0x0f, 0xf7, 0xdc, 0x73, 0x4e, 0xee, 0x45, 0x77, 0x6b, 0x1a, 0x6e, 0x8d, 0x64, 0x1a, 0x52, 0x1a,
	0x6a, 0x26, 0x38, 0xc9, 0x27, 0x64, 0x56, 0x62, 0x0b, 0x0d, 0xe9, 0xb4, 0xc4, 0x3c, 0xa9, 0x84,
	0x16, 0xb8, 0x95, 0x4f, 0x46, 0xfd, 0xe5, 0x86, 0x2a, 0x88, 0x2a, 0xc4, 0x5d, 0xa1, 0xb3, 0xa7,
	0x0f, 0x08, 0x8d, 0x86, 0x00, 0xde, 0x0c, 0x64, 0x1a, 0x5f, 0xa0, 0x8e, 0x4c, 0x4c, 0xcc, 0xb8,
	0x6d, 0x39, 0xd6, 0xb8, 0x1b, 0xd4, 0x15, 0xc6, 0xe8, 0x5f, 0xa1, 0x61, 0xb7, 0x1c, 0x6b, 0xdc,
	0x0f, 0xca, 0x77, 0xd1, 0x5b, 0xa9, 0xdb, 0xed, 0x12, 0xad, 0x2b, 0x97, 0xa3, 0x41, 0x33, 0x35,
	0x93, 0x82, 0x67, 0xd0, 0xd0, 0xad, 0x1f, 0xf4, 0x39, 0x1a, 0xd0, 0x28, 0x62, 0x85, 0x41, 0x9a,
	0x14, 0x66, 0x33, 0xbb, 0xe5, 0xb4, 0xc7, 0x3d, 0xff, 0xca, 0x8b, 0x81, 0x83, 0xa2, 0x1a, 0x22,
	0x2f, 0x80, 0x4c, 0x18, 0x15, 0xc2, 0x22, 0x02, 0xae, 0xd9, 0x2b, 0x03, 0x15, 0x1c, 0xb2, 0xdc,
	0x47, 0xe4, 0x1c, 0x26, 0x9e, 0x4a, 0x99, 0x30, 0xc8, 0x56, 0xe2, 0x44, 0x2e, 0x37, 0x41, 0xd7,
	0x7f, 0x70, 0x6b, 0xf7, 0x73, 0x34, 0xdc, 0xf9, 0x58, 0x42, 0x02, 0xa1, 0x16, 0xaa, 0x1c, 0xd3,
	0xf3, 0x2f, 0x8f, 0x58, 0xdd, 0xb5, 0x04, 0xbf, 0x48, 0xfe, 0x97, 0x85, 0x86, 0x87, 0x72, 0xf8,
	0x19, 0x75, 0x1b, 0x49, 0x7c, 0xe3, 0xe5, 0x13, 0xef, 0x54, 0x9a, 0xd1, 0xed, 0x89, 0xae, 0xda,
	0xb7, 0x8f, 0xfe, 0xd7, 0x8b, 0xc0, 0xb8, 0x60, 0xec, 0xef, 0x7a, 0x74, 0xbe, 0x87, 0x55, 0x9c,
	0xd9, 0xe2, 0x65, 0x1e, 0x33, 0xbd, 0x31, 0x6b, 0x2f, 0x14, 0x29, 0xc9, 0xd3, 0x77, 0xaa, 0xe0,
	0x5e, 0x53, 0xfe, 0x69, 0x48, 0x0e, 0x09, 0x28, 0x41, 0xe4, 0x36, 0x26, 0xd5, 0xef, 0x91, 0x26,
	0x3c, 0x39, 0x72, 0x86, 0xeb, 0x4e, 0x79, 0x64, 0x0f, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd7,
	0x9d, 0xff, 0x70, 0xa4, 0x02, 0x00, 0x00,
}
