/*
Copyright the Velero contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/vmware-tanzu/velero/pkg/apis/velero/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
)

// BackupStorageLocationStatusApplyConfiguration represents an declarative configuration of the BackupStorageLocationStatus type for use
// with apply.
type BackupStorageLocationStatusApplyConfiguration struct {
	Phase              *v1.BackupStorageLocationPhase      `json:"phase,omitempty"`
	LastSyncedTime     *metav1.Time                        `json:"lastSyncedTime,omitempty"`
	LastValidationTime *metav1.Time                        `json:"lastValidationTime,omitempty"`
	Message            *string                             `json:"message,omitempty"`
	LastSyncedRevision *types.UID                          `json:"lastSyncedRevision,omitempty"`
	AccessMode         *v1.BackupStorageLocationAccessMode `json:"accessMode,omitempty"`
}

// BackupStorageLocationStatusApplyConfiguration constructs an declarative configuration of the BackupStorageLocationStatus type for use with
// apply.
func BackupStorageLocationStatus() *BackupStorageLocationStatusApplyConfiguration {
	return &BackupStorageLocationStatusApplyConfiguration{}
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *BackupStorageLocationStatusApplyConfiguration) WithPhase(value v1.BackupStorageLocationPhase) *BackupStorageLocationStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithLastSyncedTime sets the LastSyncedTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastSyncedTime field is set to the value of the last call.
func (b *BackupStorageLocationStatusApplyConfiguration) WithLastSyncedTime(value metav1.Time) *BackupStorageLocationStatusApplyConfiguration {
	b.LastSyncedTime = &value
	return b
}

// WithLastValidationTime sets the LastValidationTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastValidationTime field is set to the value of the last call.
func (b *BackupStorageLocationStatusApplyConfiguration) WithLastValidationTime(value metav1.Time) *BackupStorageLocationStatusApplyConfiguration {
	b.LastValidationTime = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *BackupStorageLocationStatusApplyConfiguration) WithMessage(value string) *BackupStorageLocationStatusApplyConfiguration {
	b.Message = &value
	return b
}

// WithLastSyncedRevision sets the LastSyncedRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastSyncedRevision field is set to the value of the last call.
func (b *BackupStorageLocationStatusApplyConfiguration) WithLastSyncedRevision(value types.UID) *BackupStorageLocationStatusApplyConfiguration {
	b.LastSyncedRevision = &value
	return b
}

// WithAccessMode sets the AccessMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AccessMode field is set to the value of the last call.
func (b *BackupStorageLocationStatusApplyConfiguration) WithAccessMode(value v1.BackupStorageLocationAccessMode) *BackupStorageLocationStatusApplyConfiguration {
	b.AccessMode = &value
	return b
}
