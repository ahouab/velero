<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Velero</title>
    <link>/</link>
    <description>Recent content on Velero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use CSI Volume Snapshotting with Velero</title>
      <link>/blog/CSI-integration/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/CSI-integration/</guid>
      <description>In the recent 1.4 release of Velero, we announced a new feature of supporting CSI snapshotting using the Kubernetes CSI Snapshot Beta APIs. With this capability of CSI volume snapshotting, Velero can now support any volume provider that has a CSI driver with snapshotting capability, without requiring a Velero-specific volume snapshotter plugin to be available.
This post has the necessary instructions for you to start using this feature.
Getting Started Using the CSI volume snapshotting features in Velero involves the following steps.</description>
    </item>
    
    <item>
      <title>Velero 1.4: Introducing Beta CSI Support, Backup Progress Tracking, and Much More!</title>
      <link>/blog/Velero-1.4-Community-Wave/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/Velero-1.4-Community-Wave/</guid>
      <description>The Velero team is excited to announce the launch of Velero v1.4.0! This release is one of our largest since v1.0.0, with many of our new features coming from community contributors.
Beta CSI Support Velero v1.4.0 now extends Velero’s support for snapshotting beyond Velero’s native VolumeSnapshotter plugins to include beta support for the Kubernetes Container Storage Interface volume snapshotting capabilities.
The Container Storage Interface (CSI) is a way for container orchestrators such as Kubernetes to provide a standard interface for storage systems, without having to create drivers for each orchestration system.</description>
    </item>
    
    <item>
      <title>Velero 1.3: Improved CRD Backups/Restores, Multi-Arch Docker Images, and More!</title>
      <link>/blog/Velero-1.3-Voyage-Continues/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/Velero-1.3-Voyage-Continues/</guid>
      <description>Velero’s voyage continues with the release of version 1.3, which includes improvements to CRD backups and restores, multi-arch Docker images including support for arm/arm64 and ppc64le, and many other usability and stability enhancements. This release includes significant contributions by community members, and we’re thrilled to be able to partner with you all in continuing to improve Velero.
Let’s take a deeper look at some of this release’s highlights.
Custom Resource Definition Backup and Restore Improvements This release includes a number of related bug fixes and improvements to how Velero backs up and restores custom resource definitions (CRDs) and instances of those CRDs.</description>
    </item>
    
    <item>
      <title>Velero 1.2 Sets Sail by Shifting Plugins Out of Tree, Adding a Structural Schema, and Sharpening Usability</title>
      <link>/blog/Velero-1.2-Sets-Sail/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/Velero-1.2-Sets-Sail/</guid>
      <description>Velero continues to evolve with the release of version 1.2. With this release, we’ve focused on extracting in-tree cloud provider plugins into their own repositories, making further usability improvements to the restic integration, preparing for the general availability of Kubernetes custom resource definitions (CRDs) by adding a structural schema to our CRDs, and many other new features and usability improvements.
Let’s take a look at the highlights for this release.</description>
    </item>
    
    <item>
      <title>Velero v1.1 backing up and restoring Stateful apps on vSphere</title>
      <link>/blog/Velero-v1-1-Stateful-Backup-vSphere/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/Velero-v1-1-Stateful-Backup-vSphere/</guid>
      <description>Velero version 1.1 provides support to backup applications orchestrated on upstream Kubernetes running natively on vSphere. This post will provide detailed information on how to use Velero v1.1 to backup and restore a stateful application (Cassandra) that is running in a Kubernetes cluster deployed on vSphere. At this time there is no vSphere plugin for snapshotting stateful applications during a Velero backup. In this case, we rely on a third party program called restic to copy the data contents from Persistent Volumes.</description>
    </item>
    
    <item>
      <title>Velero v1.1 backing up and restoring apps on vSphere</title>
      <link>/blog/Velero-v1-1-on-vSphere/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/Velero-v1-1-on-vSphere/</guid>
      <description>Velero version 1.1 provides support to backup Kubernetes applications deployed on vSphere. This post will provide detailed information on how to install and configure Velero to backup and restore a stateless application (nginx) that is running in Kubernetes on vSphere. At this time there is no vSphere plugin for snapshotting stateful applications on vSphere during a Velero backup. In this case, we rely on a third party program called restic. However this post does not include an example of how to backup a stateful application.</description>
    </item>
    
    <item>
      <title>Announcing a new GitHub home for Velero</title>
      <link>/blog/announcing-gh-move/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/announcing-gh-move/</guid>
      <description>Big announcement We are now part of a brand new GitHub organization: VMware Tanzu. VMware Tanzu is a new family of projects, products and services for the cloud native world. With the Velero project being a cloud native technology that extends Kubernetes, it is only natural that it would be moved to sit alongside all the other VMware-supported cloud native repositories. You can read more about this change in this VMware blog post.</description>
    </item>
    
    <item>
      <title>Announcing Velero 1.1: Improved restic Support and More Visibility</title>
      <link>/blog/announcing-velero-1.1/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/announcing-velero-1.1/</guid>
      <description>We’ve made big strides in improving Velero. Since our release of version 1.0 in May 2019, we have been hard at work improving our restic support and planning for the future of Velero. In addition, we’ve seen some helpful contributions from the community that will make life easier for all of our users. Also, the Velero community has reached 100 contributors!
For this release, we’ve focused on improving Velero’s restic integration: making repository locks shorter lived, giving more visibility into restic repositories when migrating clusters, and expanding support to more volume types.</description>
    </item>
    
    <item>
      <title>Velero 1.0 Has Arrived: Delivering Enhanced Stability, Usability and Extensibility Features</title>
      <link>/blog/velero-1.0-has-arrived/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/velero-1.0-has-arrived/</guid>
      <description>Just three months after the release of Velero 0.11, the community’s momentum continues with the delivery of the landmark version 1.0 release. This significant release improves the installation experience, Helm support, the plugin system, and overall stability. We want to thank the community and the team, and acknowledge all of their hard work and amazing contributions to this major milestone.
Data protection is always a chief concern for application owners who want to make sure that they can restore a cluster to a known good state, recover from a crashed cluster, or migrate to a new environment.</description>
    </item>
    
    <item>
      <title>Velero is an Open Source Tool to Back up and Migrate Kubernetes Clusters</title>
      <link>/blog/Velero-is-an-Open-Source-Tool-to-Back-up-and-Migrate-Kubernetes-Clusters/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/Velero-is-an-Open-Source-Tool-to-Back-up-and-Migrate-Kubernetes-Clusters/</guid>
      <description>Velero is an open source tool to safely back up, recover, and migrate Kubernetes clusters and persistent volumes. It works both on premises and in a public cloud. Velero consists of a server process running as a deployment in your Kubernetes cluster and a command-line interface (CLI) with which DevOps teams and platform operators configure scheduled backups, trigger ad-hoc backups, perform restores, and more.
What Makes Velero Stand Out? Unlike other tools which directly access the Kubernetes etcd database to perform backups and restores, Velero uses the Kubernetes API to capture the state of cluster resources and to restore them when necessary.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  Restore  Schedule  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/api-types/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/api-types/restore/</guid>
      <description>Restore API Type Use The Restore API type is used as a request for the Velero server to perform a Restore. Once created, the Velero Server immediately starts the Restore process.
API GroupVersion Restore belongs to the API group version velero.io/v1.
Definition Here is a sample Restore object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Restore # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/api-types/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/api-types/schedule/</guid>
      <description>Schedule API Type Use The Schedule API type is used as a repeatable request for the Velero server to perform a backup for a given cron notation. Once created, the Velero Server will start the backup process. It will then wait for the next valid point of the given cron expression and execute the backup process on a repeating basis.
API GroupVersion Schedule belongs to the API group version velero.io/v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/basic-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/basic-install/</guid>
      <description>Basic Install   Basic Install   Prerequisites  Install the CLI   Option 1: macOS - Homebrew  Option 2: GitHub release    Install and configure the server components  Command line Autocompletion    Use this doc to get a basic installation of Velero. Refer this document to customize your installation.
Prerequisites  Access to a Kubernetes cluster, v1.10 or later, with DNS and container networking enabled.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/code-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/code-standards/</guid>
      <description>Code Standards Adding a changelog Authors are expected to include a changelog file with their pull requests. The changelog file should be a new file created in the changelogs/unreleased folder. The file should follow the naming convention of pr-username and the contents of the file should be your text for the changelog.
velero/changelogs/unreleased &amp;lt;- folder 000-username &amp;lt;- file  Add that to the PR.
Code   Log messages are capitalized.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/contributions/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/contributions/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/contributions/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/contributions/minio/</guid>
      <description>Quick start evaluation install with Minio The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the section below on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/contributions/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/contributions/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/csi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/csi/</guid>
      <description>Container Storage Interface Snapshot Support in Velero This feature is under development. Documentation may not be up-to-date and features may not work as expected.
Integrating Container Storage Interface (CSI) snapshot support into Velero enables Velero to backup and restore CSI-backed volumes using the Kubernetes CSI Snapshot Beta APIs.
By supporting CSI snapshot APIs, Velero can support any volume provider that has a CSI driver, without requiring a Velero-specific plugin to be available.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/custom-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/custom-plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/customize-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/customize-installation/</guid>
      <description>Customize Velero Install   Customize Velero Install   Plugins  Install in any namespace  Use non-file-based identity mechanisms  Enable restic integration  Enable features   Enable server side features  Enable client side features    Customize resource requests and limits  Configure more than one storage location for backups or volume snapshots  Do not configure a backup storage location during install  Install an additional volume snapshot provider  Generate YAML only  Use a storage provider secured by a self-signed certificate  Additional options  Optional Velero CLI configurations   Enabling shell autocompletion   Bash on Linux   Install bash-completion  Enable Velero CLI autocompletion for Bash on Linux    Bash on macOS   Install bash-completion  Enable Velero CLI autocompletion for Bash on macOS    Autocompletion on Zsh        Plugins During install, Velero requires that at least one plugin is added (with the --plugins flag).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types Add/edit/remove plugin protobuf message or service definitions  The following files are automatically generated from the source code:
 The clientset Listers Shared informers Documentation Protobuf/gRPC types  You can run make verify to ensure that all generated files (clientset, listers, shared informers, docs) are up to date.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/examples/</guid>
      <description>Examples After you set up the Velero server, try these examples:
Basic example (without PersistentVolumes)   Start the sample nginx app:
kubectl apply -f examples/nginx-app/base.yaml   Create a backup:
velero backup create nginx-backup --include-namespaces nginx-example   Simulate a disaster:
kubectl delete namespaces nginx-example Wait for the namespace to be deleted.
  Restore your lost resources:
velero restore create --from-backup nginx-backup   Snapshot example (with PersistentVolumes)  NOTE: For Azure, you must run Kubernetes version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/how-velero-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/how-velero-works/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions velero/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. velero/velero:v1.0.0.
Latest velero/velero:latest
The latest tag follows the most recently released version of Velero.
Development velero/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/namespace/</guid>
      <description>Run in a non-default namespace The Velero installation and backups by default are run in the velero namespace. However, it is possible to use a different namespace.
1) Customize the namespace during install Use the --namespace flag, in conjunction with the other flags in the velero install command (as shown in the the Velero install instructions). This will inform Velero where to install.
2) Customize the namespace for operational commands To have namespace consistency, specify the namespace for all Velero operational commands to be the same as the namespace used to install Velero:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/on-premises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/on-premises/</guid>
      <description>On-Premises Environments You can run Velero in an on-premises cluster in different ways depending on your requirements.
Selecting an object storage provider You must select an object storage backend that Velero can use to store backup data. Supported providers contains information on various options that are supported or have been reported to work by users.
If you do not already have an object storage system, MinIO is an open-source S3-compatible object storage system that can be installed on-premises and is compatible with Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/overview-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/overview-plugins/</guid>
      <description>Velero plugin system Velero uses storage provider plugins to integrate with a variety of storage systems to support backup and snapshot operations.
For server installation, Velero requires that at least one plugin is added (with the --plugins flag). The plugin will be either of the type object store or volume snapshotter, or a plugin that contains both. An exception to this is that when the user is not configuring a backup storage location or a snapshot storage location at the time of install, this flag is optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/release-instructions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/release-instructions/</guid>
      <description>Release Instructions Ahead of Time (GA Only) Release Blog Post PR Prepare a PR containing the release blog post. It&amp;rsquo;s usually easiest to make a copy of the most recent existing post, then replace the content as appropriate.
You also need to update site/index.html to have &amp;ldquo;Latest Release Information&amp;rdquo; contain a link to the new post.
(Pre-Release and GA) Changelog and Docs PR  Set a variable with the full Velero version export VELERO_VERSION=v&amp;lt;MAJOR&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 What happens when user removes restore objects A restore object represents the restore operation. There are two types of deletion for restore objects:
1. Deleting with velero restore delete This command will delete the custom resource representing it, along with its individual log and results files.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/self-signed-certificates/</guid>
      <description>Use Velero with a storage provider secured by a self-signed certificate If you are using an S3-Compatible storage provider that is secured with a self-signed certificate, connections to the object store may fail with a certificate signed by unknown authority message. In order to proceed, a certificate bundle may be provided when adding the storage provider.
Trusting a self-signed certificate during installation When using the velero install command, you can use the --cacert flag to provide a path to a PEM-encoded certificate bundle to trust.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/support-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/support-process/</guid>
      <description>Support Process Weekly Rotation The Velero maintainers use a weekly rotation to manage community support. Each week, a different maintainer is the point person for responding to incoming support issues via Slack, GitHub, and the Google group. The point person is not expected to be on-call 24x7. Instead, they choose one or more hour(s) per day to be available/responding to incoming issues. They will communicate to the community what that time slot will be each week.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/supported-providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/supported-providers/</guid>
      <description>Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Velero supported providers    Provider Object Store Volume Snapshotter Plugin Provider Repo Setup Instructions      Amazon Web Services (AWS) AWS S3 AWS EBS  Velero plugin for AWS  AWS Plugin Setup    Google Cloud Platform (GCP) Google Cloud Storage Google Compute Engine Disks  Velero plugin for GCP  GCP Plugin Setup    Microsoft Azure Azure Blob Storage Azure Managed Disks  Velero plugin for Microsoft Azure  Azure Plugin Setup    VMware vSphere 🚫 vSphere Volumes  VMware vSphere  vSphere Plugin Setup    Contact: #Velero Slack, GitHub Issues</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
  Troubleshooting   Debug installation/ setup issues  Debug restores  General troubleshooting information   Getting velero debug logs    Known issue with restoring LoadBalancer Service  Miscellaneous issues   Velero reports custom resource not found errors when starting up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/uninstalling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/uninstalling/</guid>
      <description>Uninstalling Velero If you would like to completely uninstall Velero from your cluster, the following commands will remove all resources created by velero install:
kubectl delete namespace/velero clusterrolebinding/velero kubectl delete crds -l component=velero </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/upgrade-to-1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/upgrade-to-1.4/</guid>
      <description>Upgrading to Velero 1.4 Prerequisites  Velero v1.3.x installed.  If you&amp;rsquo;re not yet running at least Velero v1.3, see the following:
  Upgrading to v1.1  Upgrading to v1.2  Upgrading to v1.3  Instructions   Install the Velero v1.4 command-line interface (CLI) by following the instructions here.
Verify that you&amp;rsquo;ve properly installed it by running:
velero version --client-only You should see the following output:
Client: Version: v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/velero-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/velero-install/</guid>
      <description>Velero Install CLI This document serves as a guide to using the velero install CLI command to install velero server components into your kubernetes cluster.
NOTE: velero install will, by default, use the CLI&amp;rsquo;s version information to determine the version of the server compoents to deploy. This behavior may be overridden by using the --image flag. Refer to Building Server Component Container Images.
Usage This section explains some of the basic flags supported by the velero install CLI command.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/website-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/website-guidelines/</guid>
      <description>Website Guidelines Running the website locally When making changes to the website, please run the site locally before submitting a PR and manually verify your changes.
At the root of the project, run:
make serve-docs This runs all the Ruby dependencies in a container.
Alternatively, for quickly loading the website, under the velero/site/ directory run:
bundle exec jekyll serve --livereload --future For more information on how to run the website locally, please see our jekyll documentation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/master/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/master/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/about/</guid>
      <description>How Ark Works Each Ark operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Ark also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/api-types/backupstoragelocation/</guid>
      <description>Ark Backup Storage Locations Backup Storage Location Ark can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Ark must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on ark server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
 NOTE: BackupStorageLocation takes the place of the Config.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the ark cli (hooks)
  Backup  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/api-types/volumesnapshotlocation/</guid>
      <description>Ark Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Ark can be configured to take snapshots of volumes from multiple providers. Ark also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/aws-config/</guid>
      <description>Run Ark on AWS To set up Ark on AWS, you:
 Create your S3 bucket Create an AWS IAM user for Ark Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the user guide to set it up.
Create S3 bucket Heptio Ark requires an object storage bucket to store backups in, preferrably unique to a single Kubernetes cluster (see the FAQ for more details).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/azure-config/</guid>
      <description>Run Ark on Azure To configure Ark on Azure, you:
 Create your Azure storage account and blob container Create Azure service principal for Ark Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Download  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run ark backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Getting the source mkdir $HOME/go export GOPATH=$HOME/go go get github.com/heptio/ark Where go is your import path for Go.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Ark client to use. Ark looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Ark controllers are not processing the backups/restores, which usually happens because the Ark server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):
ark schedule create &amp;lt;SCHEDULE NAME&amp;gt; --schedule &amp;quot;0 7 * * *&amp;quot; This creates a Backup object with the name &amp;lt;SCHEDULE NAME&amp;gt;-&amp;lt;TIMESTAMP&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/extend/</guid>
      <description>Extend Ark Ark includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/gcp-config/</guid>
      <description>Run Ark on GCP You can run Kubernetes on Google Cloud Platform in either:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Create GCS bucket Heptio Ark requires an object storage bucket in which to store backups, preferably unique to a single Kubernetes cluster (see the FAQ for more details).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/get-started/</guid>
      <description>Getting started The following example sets up the Ark server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster.
NOTE The example lets you explore basic Ark functionality. Configuring Minio for production is out of scope.
See Set up Ark on your platform for how to configure Ark for a production environment.
Prerequisites  Access to a Kubernetes cluster, version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Ark versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Ark also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Ark&amp;rsquo;s storage destination. You can deploy Ark on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Ark&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Ark&amp;rsquo;s destination, you:
 Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Ark server  Create COS instance If you don’t have a COS instance, you can create a new one, according to the detailed instructions in Creating a new resource instance.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Ark&amp;rsquo;s image tagging policy.
Released versions gcr.io/heptio-images/ark:&amp;lt;SemVer&amp;gt;
Ark follows the Semantic Versioning standard for releases. Each tag in the github.com/heptio/ark repository has a matching image, e.g. gcr.io/heptio-images/ark:v0.8.0.
Latest gcr.io/heptio-images/ark:latest
The latest tag follows the most recently released version of Ark.
Development gcr.io/heptio-images/ark:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/install-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/install-overview/</guid>
      <description>Set up Ark on your platform You can run Ark with a cloud provider or on-premises. For detailed information about the platforms that Ark supports, see Compatible Storage Providers.
In version 0.7.0 and later, you can run Ark in any namespace, which requires additional customization. See Run in custom namespace.
In version 0.9.0 and later, you can use Ark&amp;rsquo;s integration with restic, which requires additional setup. See restic instructions.
Customize configuration Whether you run Ark on a cloud provider or on-premises, if you have more than one volume snapshot location for a given volume provider, you can specify its default location for backups by setting a server flag in your Ark deployment YAML.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Ark v0.10 introduces a new way of configuring where Ark backups and their associated persistent volume snapshots are stored.
Motivations In Ark versions prior to v0.10, the configuration for where to store backups &amp;amp; volume snapshots is specified in a Config custom resource. The backupStorageProvider section captures the place where all Ark backups should be stored. This is defined by a provider (e.g. aws, azure, gcp, minio, etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Heptio Ark can help you port your resources from one cluster to another, as long as you point each Ark instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Heptio Ark does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Ark schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/namespace/</guid>
      <description>Run in custom namespace In Ark version 0.7.0 and later, you can run Ark in any namespace. To do so, you specify the namespace in the YAML files that configure the Ark server. You then also specify the namespace when you run Ark client commands.
Edit the example files The Ark release tarballs include a set of example configs that you can use to set up your Ark server. The examples place the server and backup/schedule/restore/etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing implementations of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/rbac/</guid>
      <description>Run Ark more securely with restrictive RBAC settings By default Ark runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Ark can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Ark components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/restic/</guid>
      <description>Restic Integration As of version 0.9.0, Ark has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic.
Ark has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks). Starting with version 0.6.0, we provide a plugin model that enables anyone to implement additional object and block storage backends, outside the main Ark repository.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/storage-layout-reorg-v0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/storage-layout-reorg-v0.10/</guid>
      <description>Object Storage Layout Changes in v0.10 Overview Ark v0.10 includes breaking changes to where data is stored in your object storage bucket. You&amp;rsquo;ll need to run a one-time migration procedure if you&amp;rsquo;re upgrading from prior versions of Ark.
Details Prior to v0.10, Ark stored data in an object storage bucket using the following structure:
&amp;lt;your-bucket&amp;gt;/ backup-1/ ark-backup.json backup-1.tar.gz backup-1-logs.gz restore-of-backup-1-logs.gz restore-of-backup-1-results.gz backup-2/ ark-backup.json backup-2.tar.gz backup-2-logs.gz restore-of-backup-2-logs.gz restore-of-backup-2-results.gz ... Ark also stored restic data, if applicable, in a separate object storage bucket, structured as:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/support-matrix/</guid>
      <description>Compatible Storage Providers Ark supports a variety of storage providers for different backup and snapshot operations. As of version 0.6.0, a plugin system allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Ark codebase.
Backup Storage Providers    Provider Owner Contact      AWS S3 Ark Team  Slack, GitHub Issue    Azure Blob Storage Ark Team  Slack, GitHub Issue    Google Cloud Storage Ark Team  Slack, GitHub Issue    S3-Compatible Backup Storage Providers Ark uses Amazon&amp;rsquo;s Go SDK to connect to the S3 API.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #ark-dr channel on the Kubernetes Slack server.
See also:
  Debug installation/setup issues  Debug restores  General troubleshooting information In ark version &amp;gt;= 0.1.0, you can use the ark bug command to open a Github issue by launching a browser window with some prepopulated values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/upgrading-to-v0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/upgrading-to-v0.10/</guid>
      <description>Upgrading to Ark v0.10 Overview Ark v0.10 includes a number of breaking changes. Below, we outline what those changes are, and what steps you should take to ensure a successful upgrade from prior versions of Ark.
Breaking Changes Switch from Config to BackupStorageLocation and VolumeSnapshotLocation CRDs, and new server flags Prior to v0.10, Ark used a Config CRD to capture information about your backup storage and persistent volume providers, as well some miscellaneous Ark settings.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/versions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/versions/</guid>
      <description>Upgrading Ark versions Ark supports multiple concurrent versions. Whether you&amp;rsquo;re setting up Ark for the first time or upgrading to a new version, you need to pay careful attention to versioning. This doc page is new as of version 0.10.0, and will be updated with information about subsequent releases.
Minor versions, patch versions The documentation site provides docs for minor versions only, not for patch releases. Patch releases are guaranteed not to be breaking, but you should carefully read the release notes to make sure that you understand any relevant changes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.10.0/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.10.0/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Heptio team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/about/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero Server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
 NOTE: BackupStorageLocation takes the place of the Config.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/aws-config/</guid>
      <description>Run Velero on AWS To set up Velero on AWS, you:
 Download an official release of Velero Create your S3 bucket Create an AWS IAM user for Velero Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the user guide to set it up.
Download Velero   Download the latest release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/azure-config/</guid>
      <description>Run Velero on Azure To configure Velero on Azure, you:
 Download an official release of Velero Create your Azure storage account and blob container Create Azure service principal for Velero Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Getting the source  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run velero backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Getting the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):
velero schedule create &amp;lt;SCHEDULE NAME&amp;gt; --schedule &amp;quot;0 7 * * *&amp;quot; This creates a Backup object with the name &amp;lt;SCHEDULE NAME&amp;gt;-&amp;lt;TIMESTAMP&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/expose-minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/expose-minio/</guid>
      <description>Expose Minio outside your cluster When you run commands to get logs or describe a backup, the Velero server generates a pre-signed URL to download the requested items. To access these URLs from outside the cluster &amp;ndash; that is, from your Velero client &amp;ndash; you need to make Minio available outside the cluster. You can:
 Change the Minio Service type from ClusterIP to NodePort. Set up Ingress for your cluster, keeping Minio Service type ClusterIP.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/extend/</guid>
      <description>Extend Velero Velero includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/gcp-config/</guid>
      <description>Run Velero on GCP You can run Kubernetes on Google Cloud Platform in either:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Download Velero   Download the latest release&amp;rsquo;s tarball for your client platform.
  Extract the tarball:
tar -xvf &amp;lt;RELEASE-TARBALL-NAME&amp;gt;.tar.gz -C /dir/to/extract/to We&amp;rsquo;ll refer to the directory you extracted to as the &amp;ldquo;Velero directory&amp;rdquo; in subsequent steps.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/get-started/</guid>
      <description>Getting started The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the docs on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Velero versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Velero also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions gcr.io/heptio-images/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/heptio/velero repository has a matching image, e.g. gcr.io/heptio-images/velero:v0.11.0.
Latest gcr.io/heptio-images/velero:latest
The latest tag follows the most recently released version of Velero.
Development gcr.io/heptio-images/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/install-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/install-overview/</guid>
      <description>Set up Velero on your platform You can run Velero with a cloud provider or on-premises. For detailed information about the platforms that Velero supports, see Compatible Storage Providers.
In version 0.7.0 and later, you can run Velero in any namespace, which requires additional customization. See Run in custom namespace.
In version 0.9.0 and later, you can use Velero&amp;rsquo;s integration with restic, which requires additional setup. See restic instructions.
Customize configuration Whether you run Velero on a cloud provider or on-premises, if you have more than one volume snapshot location for a given volume provider, you can specify its default location for backups by setting a server flag in your Velero deployment YAML.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Velero v0.10 introduces a new way of configuring where Velero backups and their associated persistent volume snapshots are stored.
Motivations In Velero versions prior to v0.10, the configuration for where to store backups &amp;amp; volume snapshots is specified in a Config custom resource. The backupStorageProvider section captures the place where all Velero backups should be stored. This is defined by a provider (e.g. aws, azure, gcp, minio, etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/migrating-to-velero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/migrating-to-velero/</guid>
      <description>Migrating from Heptio Ark to Velero As of v0.11.0, Heptio Ark has become Velero. This means the following changes have been made:
 The ark CLI client is now velero. The default Kubernetes namespace and ServiceAccount are now named velero (formerly heptio-ark). The container image name is now gcr.io/heptio-images/velero (formerly gcr.io/heptio-images/ark). CRDs are now under the new velero.io API group name (formerly ark.heptio.com).  The following instructions will help you migrate your existing Ark installation to Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/namespace/</guid>
      <description>Run in custom namespace In Velero version 0.7.0 and later, you can run Velero in any namespace. To do so, you specify the namespace in the YAML files that configure the Velero server. You then also specify the namespace when you run Velero client commands.
Edit the example files The Velero release tarballs include a set of example configs that you can use to set up your Velero server. The examples place the server and backup/schedule/restore/etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/restic/</guid>
      <description>Restic Integration As of version 0.9.0, Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks). Starting with version 0.6.0, we provide a plugin model that enables anyone to implement additional object and block storage backends, outside the main Velero repository.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/support-matrix/</guid>
      <description>Compatible Storage Providers Velero supports a variety of storage providers for different backup and snapshot operations. As of version 0.6.0, a plugin system allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Backup Storage Providers    Provider Owner Contact      AWS S3 Velero Team  Slack, GitHub Issue    Azure Blob Storage Velero Team  Slack, GitHub Issue    Google Cloud Storage Velero Team  Slack, GitHub Issue    S3-Compatible Backup Storage Providers Velero uses Amazon&amp;rsquo;s Go SDK to connect to the S3 API.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
See also:
  Debug installation/setup issues  Debug restores  General troubleshooting information In velero version &amp;gt;= 0.10.0, you can use the velero bug command to open a Github issue by launching a browser window with some prepopulated values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/versions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/versions/</guid>
      <description>Upgrading Velero versions Velero supports multiple concurrent versions. Whether you&amp;rsquo;re setting up Velero for the first time or upgrading to a new version, you need to pay careful attention to versioning. This doc page is new as of version 0.10.0, and will be updated with information about subsequent releases.
Minor versions, patch versions The documentation site provides docs for minor versions only, not for patch releases. Patch releases are guaranteed not to be breaking, but you should carefully read the release notes to make sure that you understand any relevant changes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.11.0/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.11.0/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/build-from-scratch/</guid>
      <description>Build From Scratch While the README pulls from the Heptio image registry, you can also build your own Heptio Ark container with the following steps:
  0. Prerequisites  1. Download  2. Build  3. Run  0. Prerequisites In addition to the handling the prerequisites mentioned in the Quickstart, you should have Go installed (minimum version 1.8).
1. Download Install with go:
go get github.com/heptio/ark The files are installed in $GOPATH/src/github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
Options  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  ark restore	- Work with restores  ark schedule	- Work with schedules  ark server	- Run the ark server  ark version	- Print the ark version and associated image  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.group, such as storageclasses.storage.k8s.io (use &#39;*&#39; for all resources) --label-columns stringArray a comma-separated list of labels to be displayed as columns --labels mapStringString labels to apply to the backup -o, --output string Output display format.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get Options  --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create BACKUP Options  --label-columns stringArray a comma-separated list of labels to be displayed as columns --labels mapStringString labels to apply to the restore --namespace-mappings mapStringString namespace mappings from name in the backup to desired restored name in the form src1:dst1,src2:dst2,... --namespaces stringArray comma-separated list of namespaces to restore -o, --output string Output display format. For create commands, display the object but do not send it to the server.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get get restores
Synopsis get restores
ark restore get Options  --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis Create a schedule
ark schedule create NAME Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.group, such as storageclasses.storage.k8s.io (use &#39;*&#39; for all resources) --label-columns stringArray a comma-separated list of labels to be displayed as columns --labels mapStringString labels to apply to the backup -o, --output string Output display format.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get Options  --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server Options  --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration Options inherited from parent commands  --alsologtostderr log to standard error as well as files --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
The files in this directory enumerate each of the possible ark commands and their flags. Note that you can also find this info with the CLI itself, using the --help flag.
Running the client While it is possible to build and run the ark executable yourself, it is recommended to use the containerized version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/cloud-provider-specifics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/cloud-provider-specifics/</guid>
      <description>Cloud Provider Specifics While the Quickstart uses a local storage service to quickly set up Heptio Ark as a demonstration, this document details additional configurations that are required when integrating with the cloud providers below:
  Setup   AWS  GCP  Azure    Run   Ark server  Basic example (no PVs)  Snapshot example (with PVs)    Setup AWS IAM user creation To integrate Heptio Ark with AWS, you should follow the instructions below to create an Ark-specific IAM user.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/concepts/</guid>
      <description>Concepts   Overview  Operation types   1. Backups  2. Schedules  3. Restores    Expired backup deletion  Cloud storage sync  Overview Heptio Ark provides customizable degrees of recovery for all Kubernetes API objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use the -o option:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory beneath the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file explicitly lists all info about your associated Backup resource&amp;ndash;including any default values used&amp;ndash;so that you have a complete historical record of its configuration.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.3.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.3.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/build-from-scratch/</guid>
      <description>Build From Scratch While the README pulls from the Heptio image registry, you can also build your own Heptio Ark container with the following steps:
  0. Prerequisites  1. Download  2. Build  3. Run  4. Vendoring dependencies  0. Prerequisites In addition to the handling the prerequisites mentioned in the Quickstart, you should have Go installed (minimum version 1.8).
1. Download Install with go:
go get github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
Options  --alsologtostderr log to standard error as well as files -h, --help help for ark --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.group, such as storageclasses.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.group, such as storageclasses.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get get restores
Synopsis get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis Create a schedule
ark schedule create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.group, such as storageclasses.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
The files in this directory enumerate each of the possible ark commands and their flags. Note that you can also find this info with the CLI itself, using the --help flag.
Running the client While it is possible to build and run the ark executable yourself, it is recommended to use the containerized version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/cloud-provider-specifics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/cloud-provider-specifics/</guid>
      <description>Cloud Provider Specifics  NOTE: Documentation may change between releases. See the Changelog for links to previous versions of this repository and its docs.
To ensure that you are working off a specific release, git checkout &amp;lt;VERSION_TAG&amp;gt; where &amp;lt;VERSION_TAG&amp;gt; is the appropriate tag for the Ark version you wish to use (e.g. &amp;ldquo;v0.3.3&amp;rdquo;). You should git checkout master only if you&amp;rsquo;re planning on building the Ark image from scratch.
 While the Quickstart uses a local storage service to quickly set up Heptio Ark as a demonstration, this document details additional configurations that are required when integrating with the cloud providers below:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/concepts/</guid>
      <description>Concepts   Overview  Operation types   1. Backups  2. Schedules  3. Restores    Expired backup deletion  Cloud storage sync  Overview Heptio Ark provides customizable degrees of recovery for all Kubernetes API objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use the -o option:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory beneath the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file explicitly lists all info about your associated Backup resource&amp;ndash;including any default values used&amp;ndash;so that you have a complete historical record of its configuration.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.4.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.4.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by running
go get -u github.com/golang/dep/cmd/dep Dep currently pulls in a bit more than we&amp;rsquo;d like, so we have created a script to remove these extra files: hack/dep-save.sh.
Adding a new dependency Run hack/dep-save.sh. If you want to see verbose output, you can append -v as in hack/dep-save.sh -v.
Updating an existing dependency Run hack/dep-save.sh -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; .</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/build-from-scratch/</guid>
      <description>Build From Scratch While the README pulls from the Heptio image registry, you can also build your own Heptio Ark container with the following steps:
  0. Prerequisites  1. Download  2. Build  3. Test  4. Run  5. Vendoring dependencies  0. Prerequisites In addition to the handling the prerequisites mentioned in the Quickstart, you should have Go installed (minimum version 1.8).
1. Download Install with go:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for restore --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis Create a schedule
ark create schedule NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for schedule --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis Create a schedule
ark schedule create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
The files in this directory enumerate each of the possible ark commands and their flags. Note that you can also find this info with the CLI itself, using the --help flag.
Running the client While it is possible to build and run the ark executable yourself, it is recommended to use the containerized version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/cloud-provider-specifics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/cloud-provider-specifics/</guid>
      <description>Cloud Provider Specifics  NOTE: Documentation may change between releases. See the Changelog for links to previous versions of this repository and its docs.
To ensure that you are working off a specific release, git checkout &amp;lt;VERSION_TAG&amp;gt; where &amp;lt;VERSION_TAG&amp;gt; is the appropriate tag for the Ark version you wish to use (e.g. &amp;ldquo;v0.3.3&amp;rdquo;). You should git checkout master only if you&amp;rsquo;re planning on building the Ark image from scratch.
 While the Quickstart uses a local storage service to quickly set up Heptio Ark as a demonstration, this document details additional configurations that are required when integrating with the cloud providers below:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/concepts/</guid>
      <description>Concepts   Overview  Operation types   1. Backups  2. Schedules  3. Restores    API types  Expired backup deletion  Cloud storage sync  Overview Heptio Ark provides customizable degrees of recovery for all Kubernetes API objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use the -o option:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd istelf. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. There are two ways to specify hooks: annotations on the pod itself, and in the Backup spec.
Specifying Hooks As Pod Annotations You can use the following annotations on a pod to make Ark execute a hook when backing up the pod:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory beneath the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file explicitly lists all info about your associated Backup resource&amp;ndash;including any default values used&amp;ndash;so that you have a complete historical record of its configuration.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.5.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.5.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by running
go get -u github.com/golang/dep/cmd/dep Dep currently pulls in a bit more than we&amp;rsquo;d like, so we have created a script to remove these extra files: hack/dep-save.sh.
Adding a new dependency Run hack/dep-save.sh. If you want to see verbose output, you can append -v as in hack/dep-save.sh -v.
Updating an existing dependency Run hack/dep-save.sh -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; .</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/build-from-scratch/</guid>
      <description>Build From Scratch While the README pulls from the Heptio image registry, you can also build your own Heptio Ark container with the following steps:
  0. Prerequisites  1. Download  2. Build  3. Test  4. Run  5. Vendoring dependencies  0. Prerequisites In addition to the handling the prerequisites mentioned in the Quickstart, you should have Go installed (minimum version 1.8).
1. Download Install with go:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_backup_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_backup_describe/</guid>
      <description>ark backup describe Describe backups
Synopsis Describe backups
ark backup describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for restore --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis Create a schedule
ark create schedule NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for schedule --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_describe/</guid>
      <description>ark describe Describe ark resources
Synopsis Describe ark resources
Options  -h, --help help for describe Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_describe_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_describe_backups/</guid>
      <description>ark describe backups Describe backups
Synopsis Describe backups
ark describe backups [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for backups -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_describe_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_describe_restores/</guid>
      <description>ark describe restores Describe restores
Synopsis Describe restores
ark describe restores [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for restores -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_describe_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_describe_schedules/</guid>
      <description>ark describe schedules Describe schedules
Synopsis Describe schedules
ark describe schedules [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for schedules -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_plugin/</guid>
      <description>ark plugin Work with plugins
Synopsis Work with plugins
Options  -h, --help help for plugin Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_plugin_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_plugin_add/</guid>
      <description>ark plugin add Add a plugin
Synopsis Add a plugin
ark plugin add IMAGE [flags] Options  -h, --help help for add --image-pull-policy the imagePullPolicy for the plugin container. Valid values are Always, IfNotPresent, Never. (default IfNotPresent) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark plugin	- Work with plugins  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_plugin_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_plugin_remove/</guid>
      <description>ark plugin remove Remove a plugin
Synopsis Remove a plugin
ark plugin remove [NAME | IMAGE] [flags] Options  -h, --help help for remove Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark plugin	- Work with plugins  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_restore_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_restore_describe/</guid>
      <description>ark restore describe Describe restores
Synopsis Describe restores
ark restore describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis Create a schedule
ark schedule create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_schedule_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_schedule_describe/</guid>
      <description>ark schedule describe Describe schedules
Synopsis Describe schedules
ark schedule describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
The files in this directory enumerate each of the possible ark commands and their flags. Note that you can also find this info with the CLI itself, using the --help flag.
Running the client While it is possible to build and run the ark executable yourself, it is recommended to use the containerized version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/cloud-provider-specifics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/cloud-provider-specifics/</guid>
      <description>Cloud Provider Specifics  NOTE: Documentation may change between releases. See the Changelog for links to previous versions of this repository and its docs.
To ensure that you are working off a specific release, git checkout &amp;lt;VERSION_TAG&amp;gt; where &amp;lt;VERSION_TAG&amp;gt; is the appropriate tag for the Ark version you wish to use (e.g. &amp;ldquo;v0.3.3&amp;rdquo;). You should git checkout master only if you&amp;rsquo;re planning on building the Ark image from scratch.
 While the Quickstart uses a local storage service to quickly set up Heptio Ark as a demonstration, this document details additional configurations that are required when integrating with the cloud providers below:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/concepts/</guid>
      <description>Concepts   Overview  Operation types   1. Backups  2. Schedules  3. Restores    API types  Expired backup deletion  Cloud storage sync  Overview Heptio Ark provides customizable degrees of recovery for all Kubernetes API objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd istelf. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. There are two ways to specify hooks: annotations on the pod itself, and in the Backup spec.
Specifying Hooks As Pod Annotations You can use the following annotations on a pod to make Ark execute a hook when backing up the pod:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory beneath the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file explicitly lists all info about your associated Backup resource&amp;ndash;including any default values used&amp;ndash;so that you have a complete historical record of its configuration.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing an implementation of one of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementation to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.6.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.6.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by running
go get -u github.com/golang/dep/cmd/dep Dep currently pulls in a bit more than we&amp;rsquo;d like, so we have created a script to remove these extra files: hack/dep-save.sh.
Adding a new dependency Run hack/dep-save.sh. If you want to see verbose output, you can append -v as in hack/dep-save.sh -v.
Updating an existing dependency Run hack/dep-save.sh -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; .</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/about/</guid>
      <description>About Heptio Ark Heptio Ark provides customizable degrees of recovery for all Kubernetes objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.g. upgrades).
Features Ark provides the following operations:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/aws-config/</guid>
      <description>Run Ark on AWS To set up Ark on AWS, you:
 Create your S3 bucket Create an AWS IAM user for Ark Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the [user guide][5] to set it up.
Create S3 bucket Heptio Ark requires an object storage bucket to store backups in. Create an S3 bucket, replacing placeholders appropriately:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/azure-config/</guid>
      <description>Run Ark on Azure To configure Ark on Azure, you:
 Create your Azure storage account and blob container Create Azure service principal for Ark Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Download  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run ark backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Download Install with go:
go get github.com/heptio/ark The files are installed in $GOPATH/src/github.com/heptio/ark.
Build You can build your Ark image locally on the machine where you run your cluster, or you can push it to a private registry.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup_delete/</guid>
      <description>ark backup delete Delete a backup
Synopsis Delete a backup
ark backup delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup_describe/</guid>
      <description>ark backup describe Describe backups
Synopsis Describe backups
ark backup describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_client/</guid>
      <description>ark client Ark client related commands
Synopsis Ark client related commands
Options  -h, --help help for client Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_client_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_client_config/</guid>
      <description>ark client config Get and set client configuration file values
Synopsis Get and set client configuration file values
Options  -h, --help help for config Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark client	- Ark client related commands  ark client config get	- Get client configuration file values  ark client config set	- Set client configuration file values  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_client_config_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_client_config_get/</guid>
      <description>ark client config get Get client configuration file values
Synopsis Get client configuration file values
ark client config get [KEY 1] [KEY 2] [...] [flags] Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark client config	- Get and set client configuration file values  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_client_config_set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_client_config_set/</guid>
      <description>ark client config set Set client configuration file values
Synopsis Set client configuration file values
ark client config set KEY=VALUE [KEY=VALUE]... [flags] Options  -h, --help help for set Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark client config	- Get and set client configuration file values  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for restore --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis Create a schedule
ark create schedule NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for schedule --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_delete/</guid>
      <description>ark delete Delete ark resources
Synopsis Delete ark resources
Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_delete_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_delete_backup/</guid>
      <description>ark delete backup Delete a backup
Synopsis Delete a backup
ark delete backup NAME [flags] Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark delete	- Delete ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_delete_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_delete_restore/</guid>
      <description>ark delete restore Delete a restore
Synopsis Delete a restore
ark delete restore NAME [flags] Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark delete	- Delete ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_delete_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_delete_schedule/</guid>
      <description>ark delete schedule Delete a schedule
Synopsis Delete a schedule
ark delete schedule NAME [flags] Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark delete	- Delete ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_describe/</guid>
      <description>ark describe Describe ark resources
Synopsis Describe ark resources
Options  -h, --help help for describe Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_describe_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_describe_backups/</guid>
      <description>ark describe backups Describe backups
Synopsis Describe backups
ark describe backups [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for backups -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_describe_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_describe_restores/</guid>
      <description>ark describe restores Describe restores
Synopsis Describe restores
ark describe restores [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for restores -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_describe_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_describe_schedules/</guid>
      <description>ark describe schedules Describe schedules
Synopsis Describe schedules
ark describe schedules [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for schedules -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_plugin/</guid>
      <description>ark plugin Work with plugins
Synopsis Work with plugins
Options  -h, --help help for plugin Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_plugin_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_plugin_add/</guid>
      <description>ark plugin add Add a plugin
Synopsis Add a plugin
ark plugin add IMAGE [flags] Options  -h, --help help for add --image-pull-policy the imagePullPolicy for the plugin container. Valid values are Always, IfNotPresent, Never. (default IfNotPresent) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark plugin	- Work with plugins  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_plugin_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_plugin_remove/</guid>
      <description>ark plugin remove Remove a plugin
Synopsis Remove a plugin
ark plugin remove [NAME | IMAGE] [flags] Options  -h, --help help for remove Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark plugin	- Work with plugins  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_restore_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_restore_describe/</guid>
      <description>ark restore describe Describe restores
Synopsis Describe restores
ark restore describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis Create a schedule
ark schedule create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_schedule_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_schedule_describe/</guid>
      <description>ark schedule describe Describe schedules
Synopsis Describe schedules
ark schedule describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
 The files in the CLI reference directory in the repository enumerate each of the possible ark commands and their flags. This information is available in the CLI, using the --help flag.
Running the client We recommend that you download a pre-built release, but you can also build and run the ark executable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/cloud-common/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/cloud-common/</guid>
      <description>Set up Ark with your cloud provider To run Ark with your cloud provider, you specify provider-specific settings for the Ark server. In version 0.7.0 and later, you can run Ark in any namespace, which requires additional customization. See Run in custom namespace.
The Ark repository includes a set of example YAML files that specify the settings for each cloud provider. For provider-specific instructions, see:
  Run Ark on AWS  Run Ark on GCP  Run Ark on Azure  Examples After you set up the Ark server, try these examples:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/extend/</guid>
      <description>Extend Ark Ark includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd istelf. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/gcp-config/</guid>
      <description>Run Ark on GCP You can run Kubernetes on Google Cloud Platform in either of:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Create GCS bucket Heptio Ark requires an object storage bucket in which to store backups. Create a GCS bucket, replacing placeholder appropriately:
gsutil mb gs://&amp;lt;YOUR_BUCKET&amp;gt;/ Create service account To integrate Heptio Ark with GCP, create an Ark-specific Service Account:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Ark versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Ark also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/namespace/</guid>
      <description>Run in custom namespace In Ark version 0.7.0 and later, you can run Ark in any namespace. To do so, you specify the namespace in the YAML files that configure the Ark server. You then also specify the namespace when you run Ark client commands.
Edit the example files The Ark repository includes a set of examples that you can use to set up your Ark server. The examples specify only the default heptio-ark namespace.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing an implementation of one of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementation to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by running
go get -u github.com/golang/dep/cmd/dep Dep currently pulls in a bit more than we&amp;rsquo;d like, so we have created a script to remove these extra files: hack/dep-save.sh.
Adding a new dependency Run hack/dep-save.sh. If you want to see verbose output, you can append -v as in hack/dep-save.sh -v.
Updating an existing dependency Run hack/dep-save.sh -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; .</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/about/</guid>
      <description>About Heptio Ark Heptio Ark provides customizable degrees of recovery for all Kubernetes objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.g. upgrades).
Features Ark provides the following operations:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/aws-config/</guid>
      <description>Run Ark on AWS To set up Ark on AWS, you:
 Create your S3 bucket Create an AWS IAM user for Ark Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the [user guide][5] to set it up.
Create S3 bucket Heptio Ark requires an object storage bucket to store backups in. Create an S3 bucket, replacing placeholders appropriately:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/azure-config/</guid>
      <description>Run Ark on Azure To configure Ark on Azure, you:
 Create your Azure storage account and blob container Create Azure service principal for Ark Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Download  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run ark backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Download Install with go:
go get github.com/heptio/ark The files are installed in $GOPATH/src/github.com/heptio/ark.
Build You can build your Ark image locally on the machine where you run your cluster, or you can push it to a private registry.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup_delete/</guid>
      <description>ark backup delete Delete a backup
Synopsis Delete a backup
ark backup delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup_describe/</guid>
      <description>ark backup describe Describe backups
Synopsis Describe backups
ark backup describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark backup	- Work with backups  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_client/</guid>
      <description>ark client Ark client related commands
Synopsis Ark client related commands
Options  -h, --help help for client Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_client_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_client_config/</guid>
      <description>ark client config Get and set client configuration file values
Synopsis Get and set client configuration file values
Options  -h, --help help for config Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark client	- Ark client related commands  ark client config get	- Get client configuration file values  ark client config set	- Set client configuration file values  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_client_config_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_client_config_get/</guid>
      <description>ark client config get Get client configuration file values
Synopsis Get client configuration file values
ark client config get [KEY 1] [KEY 2] [...] [flags] Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark client config	- Get and set client configuration file values  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_client_config_set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_client_config_set/</guid>
      <description>ark client config set Set client configuration file values
Synopsis Set client configuration file values
ark client config set KEY=VALUE [KEY=VALUE]... [flags] Options  -h, --help help for set Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark client config	- Get and set client configuration file values  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for restore --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis Create a schedule
ark create schedule NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for schedule --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_delete/</guid>
      <description>ark delete Delete ark resources
Synopsis Delete ark resources
Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_delete_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_delete_backup/</guid>
      <description>ark delete backup Delete a backup
Synopsis Delete a backup
ark delete backup NAME [flags] Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark delete	- Delete ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_delete_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_delete_restore/</guid>
      <description>ark delete restore Delete a restore
Synopsis Delete a restore
ark delete restore NAME [flags] Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark delete	- Delete ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_delete_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_delete_schedule/</guid>
      <description>ark delete schedule Delete a schedule
Synopsis Delete a schedule
ark delete schedule NAME [flags] Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark delete	- Delete ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_describe/</guid>
      <description>ark describe Describe ark resources
Synopsis Describe ark resources
Options  -h, --help help for describe Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_describe_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_describe_backups/</guid>
      <description>ark describe backups Describe backups
Synopsis Describe backups
ark describe backups [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for backups -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_describe_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_describe_restores/</guid>
      <description>ark describe restores Describe restores
Synopsis Describe restores
ark describe restores [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for restores -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_describe_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_describe_schedules/</guid>
      <description>ark describe schedules Describe schedules
Synopsis Describe schedules
ark describe schedules [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for schedules -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark describe	- Describe ark resources  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_plugin/</guid>
      <description>ark plugin Work with plugins
Synopsis Work with plugins
Options  -h, --help help for plugin Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_plugin_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_plugin_add/</guid>
      <description>ark plugin add Add a plugin
Synopsis Add a plugin
ark plugin add IMAGE [flags] Options  -h, --help help for add --image-pull-policy the imagePullPolicy for the plugin container. Valid values are Always, IfNotPresent, Never. (default IfNotPresent) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark plugin	- Work with plugins  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_plugin_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_plugin_remove/</guid>
      <description>ark plugin remove Remove a plugin
Synopsis Remove a plugin
ark plugin remove [NAME | IMAGE] [flags] Options  -h, --help help for remove Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark plugin	- Work with plugins  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create BACKUP [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the restore --include-namespaces stringArray namespaces to include in the restore (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_restore_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_restore_describe/</guid>
      <description>ark restore describe Describe restores
Synopsis Describe restores
ark restore describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark restore	- Work with restores  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis Create a schedule
ark schedule create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_schedule_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_schedule_describe/</guid>
      <description>ark schedule describe Describe schedules
Synopsis Describe schedules
ark schedule describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark schedule	- Work with schedules  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
 The files in the CLI reference directory in the repository enumerate each of the possible ark commands and their flags. This information is available in the CLI, using the --help flag.
Running the client We recommend that you download a pre-built release, but you can also build and run the ark executable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/cloud-common/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/cloud-common/</guid>
      <description>Set up Ark with your cloud provider To run Ark with your cloud provider, you specify provider-specific settings for the Ark server. In version 0.7.0 and later, you can run Ark in any namespace, which requires additional customization. See Run in custom namespace.
The Ark repository includes a set of example YAML files that specify the settings for each cloud provider. For provider-specific instructions, see:
  Run Ark on AWS  Run Ark on GCP  Run Ark on Azure  Examples After you set up the Ark server, try these examples:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/debugging-deletes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/debugging-deletes/</guid>
      <description>Ark version 0.7.0 and later: issue with deleting namespaces and backups Version 0.7.0 introduced the ability to delete backups. However, you may encounter an issue if you try to delete the heptio-ark namespace. The namespace can get stuck in a terminating state, and you cannot delete your backups. To fix:
  If you don&amp;rsquo;t have it, install jq.
  Run:
bash &amp;lt;(kubectl -n heptio-ark get backup -o json | jq -c -r $&amp;#39;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/extend/</guid>
      <description>Extend Ark Ark includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd istelf. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/gcp-config/</guid>
      <description>Run Ark on GCP You can run Kubernetes on Google Cloud Platform in either of:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Create GCS bucket Heptio Ark requires an object storage bucket in which to store backups. Create a GCS bucket, replacing placeholder appropriately:
gsutil mb gs://&amp;lt;YOUR_BUCKET&amp;gt;/ Create service account To integrate Heptio Ark with GCP, create an Ark-specific Service Account:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Ark versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Ark also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/namespace/</guid>
      <description>Run in custom namespace In Ark version 0.7.0 and later, you can run Ark in any namespace. To do so, you specify the namespace in the YAML files that configure the Ark server. You then also specify the namespace when you run Ark client commands.
Edit the example files The Ark repository includes a set of examples that you can use to set up your Ark server. The examples place the server in the heptio-ark-server namespace, and backup/schedule/restore/config data in the heptio-ark namespace.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing an implementation of one of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementation to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the Kubernetes Slack team channel #ark-dr.
   Delete namespaces and backups
   Debug restores
  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.7.1/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.7.1/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by running
go get -u github.com/golang/dep/cmd/dep Dep currently pulls in a bit more than we&amp;rsquo;d like, so we have created a script to remove these extra files: hack/dep-save.sh.
Adding a new dependency Run hack/dep-save.sh. If you want to see verbose output, you can append -v as in hack/dep-save.sh -v.
Updating an existing dependency Run hack/dep-save.sh -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; .</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/about/</guid>
      <description>About Heptio Ark Heptio Ark provides customizable degrees of recovery for all Kubernetes objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.g. upgrades).
Features Ark provides the following operations:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/aws-config/</guid>
      <description>Run Ark on AWS To set up Ark on AWS, you:
 Create your S3 bucket Create an AWS IAM user for Ark Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the [user guide][5] to set it up.
Create S3 bucket Heptio Ark requires an object storage bucket to store backups in. Create an S3 bucket, replacing placeholders appropriately:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/azure-config/</guid>
      <description>Run Ark on Azure To configure Ark on Azure, you:
 Create your Azure storage account and blob container Create Azure service principal for Ark Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Download  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run ark backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Download Install with go:
go get github.com/heptio/ark The files are installed in $GOPATH/src/github.com/heptio/ark.
Build You can build your Ark image locally on the machine where you run your cluster, or you can push it to a private registry.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup_delete/</guid>
      <description>ark backup delete Delete a backup
Synopsis Delete a backup
ark backup delete NAME [flags] Options  --confirm Confirm deletion -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup_describe/</guid>
      <description>ark backup describe Describe backups
Synopsis Describe backups
ark backup describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_client/</guid>
      <description>ark client Ark client related commands
Synopsis Ark client related commands
Options  -h, --help help for client Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_client_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_client_config/</guid>
      <description>ark client config Get and set client configuration file values
Synopsis Get and set client configuration file values
Options  -h, --help help for config Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_client_config_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_client_config_get/</guid>
      <description>ark client config get Get client configuration file values
Synopsis Get client configuration file values
ark client config get [KEY 1] [KEY 2] [...] [flags] Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_client_config_set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_client_config_set/</guid>
      <description>ark client config set Set client configuration file values
Synopsis Set client configuration file values
ark client config set KEY=VALUE [KEY=VALUE]... [flags] Options  -h, --help help for set Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_completion/</guid>
      <description>ark completion Output shell completion code for the specified shell (bash or zsh)
Synopsis Generate shell completion code.
Auto completion supports both bash and zsh. Output is to STDOUT.
Load the ark completion code for bash into the current shell - source &amp;lt;(ark completion bash)
Load the ark completion code for zsh into the current shell - source &amp;lt;(ark completion zsh)
ark completion SHELL [flags] Options  -h, --help help for completion Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore [RESTORE_NAME] --from-backup BACKUP_NAME [flags] Examples  # create a restore named &amp;quot;restore-1&amp;quot; from backup &amp;quot;backup-1&amp;quot; ark restore create restore-1 --from-backup backup-1 # create a restore with a default name (&amp;quot;backup-1-&amp;lt;timestamp&amp;gt;&amp;quot;) from backup &amp;quot;backup-1&amp;quot; ark restore create --from-backup backup-1 Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis The &amp;ndash;schedule flag is required, in cron notation:
   Character Position Character Period Acceptable Values     1 Minute 0-59,*   2 Hour 0-23,*   3 Day of Month 1-31,*   4 Month 1-12,*   5 Day of Week 0-7,*    ark create schedule NAME --schedule [flags] Examples ark create schedule NAME --schedule=&amp;quot;0 */6 * * *&amp;quot; Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_delete/</guid>
      <description>ark delete Delete ark resources
Synopsis Delete ark resources
Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_delete_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_delete_backup/</guid>
      <description>ark delete backup Delete a backup
Synopsis Delete a backup
ark delete backup NAME [flags] Options  --confirm Confirm deletion -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_delete_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_delete_restore/</guid>
      <description>ark delete restore Delete a restore
Synopsis Delete a restore
ark delete restore NAME [flags] Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_delete_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_delete_schedule/</guid>
      <description>ark delete schedule Delete a schedule
Synopsis Delete a schedule
ark delete schedule NAME [flags] Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_describe/</guid>
      <description>ark describe Describe ark resources
Synopsis Describe ark resources
Options  -h, --help help for describe Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_describe_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_describe_backups/</guid>
      <description>ark describe backups Describe backups
Synopsis Describe backups
ark describe backups [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for backups -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_describe_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_describe_restores/</guid>
      <description>ark describe restores Describe restores
Synopsis Describe restores
ark describe restores [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for restores -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_describe_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_describe_schedules/</guid>
      <description>ark describe schedules Describe schedules
Synopsis Describe schedules
ark describe schedules [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for schedules -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_plugin/</guid>
      <description>ark plugin Work with plugins
Synopsis Work with plugins
Options  -h, --help help for plugin Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_plugin_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_plugin_add/</guid>
      <description>ark plugin add Add a plugin
Synopsis Add a plugin
ark plugin add IMAGE [flags] Options  -h, --help help for add --image-pull-policy the imagePullPolicy for the plugin container. Valid values are Always, IfNotPresent, Never. (default IfNotPresent) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_plugin_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_plugin_remove/</guid>
      <description>ark plugin remove Remove a plugin
Synopsis Remove a plugin
ark plugin remove [NAME | IMAGE] [flags] Options  -h, --help help for remove Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create [RESTORE_NAME] --from-backup BACKUP_NAME [flags] Examples  # create a restore named &amp;quot;restore-1&amp;quot; from backup &amp;quot;backup-1&amp;quot; ark restore create restore-1 --from-backup backup-1 # create a restore with a default name (&amp;quot;backup-1-&amp;lt;timestamp&amp;gt;&amp;quot;) from backup &amp;quot;backup-1&amp;quot; ark restore create --from-backup backup-1 Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_restore_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_restore_describe/</guid>
      <description>ark restore describe Describe restores
Synopsis Describe restores
ark restore describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis The &amp;ndash;schedule flag is required, in cron notation:
   Character Position Character Period Acceptable Values     1 Minute 0-59,*   2 Hour 0-23,*   3 Day of Month 1-31,*   4 Month 1-12,*   5 Day of Week 0-7,*    ark schedule create NAME --schedule [flags] Examples ark create schedule NAME --schedule=&amp;quot;0 */6 * * *&amp;quot; Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_schedule_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_schedule_describe/</guid>
      <description>ark schedule describe Describe schedules
Synopsis Describe schedules
ark schedule describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) --plugin-dir string directory containing Ark plugins (default &amp;quot;/plugins&amp;quot;) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
 The files in the CLI reference directory in the repository enumerate each of the possible ark commands and their flags. This information is available in the CLI, using the --help flag.
Running the client We recommend that you download a pre-built release, but you can also build and run the ark executable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/cloud-common/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/cloud-common/</guid>
      <description>Set up Ark with your cloud provider To run Ark with your cloud provider, you specify provider-specific settings for the Ark server. In version 0.7.0 and later, you can run Ark in any namespace, which requires additional customization. See Run in custom namespace.
The Ark repository includes a set of example YAML files that specify the settings for each cloud provider. For provider-specific instructions, see:
  Run Ark on AWS  Run Ark on GCP  Run Ark on Azure  Use IBM Cloud Object Store as Ark&amp;rsquo;s storage destination  Examples After you set up the Ark server, try these examples:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/debugging-deletes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/debugging-deletes/</guid>
      <description>Ark version 0.7.0 and later: issue with deleting namespaces and backups Version 0.7.0 introduced the ability to delete backups. However, you may encounter an issue if you try to delete the heptio-ark namespace. The namespace can get stuck in a terminating state, and you cannot delete your backups. To fix:
  If you don&amp;rsquo;t have it, install jq.
  Run:
bash &amp;lt;(kubectl -n heptio-ark get backup -o json | jq -c -r $&amp;#39;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/extend/</guid>
      <description>Extend Ark Ark includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd istelf. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/gcp-config/</guid>
      <description>Run Ark on GCP You can run Kubernetes on Google Cloud Platform in either of:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Create GCS bucket Heptio Ark requires an object storage bucket in which to store backups. Create a GCS bucket, replacing placeholder appropriately:
gsutil mb gs://&amp;lt;YOUR_BUCKET&amp;gt;/ Create service account To integrate Heptio Ark with GCP, create an Ark-specific Service Account:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Ark versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Ark also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Ark&amp;rsquo;s storage destination. You can deploy Ark on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Ark&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Ark&amp;rsquo;s destination, you:
 Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Ark server  Create COS instance If you don’t have a COS instance, you can create a new one, according to the detailed instructions in Creating a new resource instance.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/namespace/</guid>
      <description>Run in custom namespace In Ark version 0.7.0 and later, you can run Ark in any namespace. To do so, you specify the namespace in the YAML files that configure the Ark server. You then also specify the namespace when you run Ark client commands.
Edit the example files The Ark repository includes a set of examples that you can use to set up your Ark server. The examples place the server and backup/schedule/restore/config data in the heptio-ark namespace.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing an implementation of one of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementation to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the Kubernetes Slack team channel #ark-dr.
   Delete namespaces and backups
   Debug restores
  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/about/</guid>
      <description>About Heptio Ark Heptio Ark provides customizable degrees of recovery for all Kubernetes objects (Pods, Deployments, Jobs, Custom Resource Definitions, etc.), as well as for persistent volumes. This recovery can be cluster-wide, or fine-tuned according to object type, namespace, or labels.
Ark is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.g. upgrades).
Features Ark provides the following operations:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/aws-config/</guid>
      <description>Run Ark on AWS To set up Ark on AWS, you:
 Create your S3 bucket Create an AWS IAM user for Ark Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the user guide to set it up.
Create S3 bucket Heptio Ark requires an object storage bucket to store backups in. Create an S3 bucket, replacing placeholders appropriately:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/azure-config/</guid>
      <description>Run Ark on Azure To configure Ark on Azure, you:
 Create your Azure storage account and blob container Create Azure service principal for Ark Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Download  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run ark backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Download Install with go:
go get github.com/heptio/ark The files are installed in $GOPATH/src/github.com/heptio/ark.
Build You can build your Ark image locally on the machine where you run your cluster, or you can push it to a private registry.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup_delete/</guid>
      <description>ark backup delete Delete a backup
Synopsis Delete a backup
ark backup delete NAME [flags] Options  --confirm Confirm deletion -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup_describe/</guid>
      <description>ark backup describe Describe backups
Synopsis Describe backups
ark backup describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_client/</guid>
      <description>ark client Ark client related commands
Synopsis Ark client related commands
Options  -h, --help help for client Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_client_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_client_config/</guid>
      <description>ark client config Get and set client configuration file values
Synopsis Get and set client configuration file values
Options  -h, --help help for config Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_client_config_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_client_config_get/</guid>
      <description>ark client config get Get client configuration file values
Synopsis Get client configuration file values
ark client config get [KEY 1] [KEY 2] [...] [flags] Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_client_config_set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_client_config_set/</guid>
      <description>ark client config set Set client configuration file values
Synopsis Set client configuration file values
ark client config set KEY=VALUE [KEY=VALUE]... [flags] Options  -h, --help help for set Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_completion/</guid>
      <description>ark completion Output shell completion code for the specified shell (bash or zsh)
Synopsis Generate shell completion code.
Auto completion supports both bash and zsh. Output is to STDOUT.
Load the ark completion code for bash into the current shell - source &amp;lt;(ark completion bash)
Load the ark completion code for zsh into the current shell - source &amp;lt;(ark completion zsh)
ark completion SHELL [flags] Options  -h, --help help for completion Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore [RESTORE_NAME] --from-backup BACKUP_NAME [flags] Examples  # create a restore named &amp;quot;restore-1&amp;quot; from backup &amp;quot;backup-1&amp;quot; ark restore create restore-1 --from-backup backup-1 # create a restore with a default name (&amp;quot;backup-1-&amp;lt;timestamp&amp;gt;&amp;quot;) from backup &amp;quot;backup-1&amp;quot; ark restore create --from-backup backup-1 Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis The &amp;ndash;schedule flag is required, in cron notation:
   Character Position Character Period Acceptable Values     1 Minute 0-59,*   2 Hour 0-23,*   3 Day of Month 1-31,*   4 Month 1-12,*   5 Day of Week 0-7,*    ark create schedule NAME --schedule [flags] Examples ark create schedule NAME --schedule=&amp;quot;0 */6 * * *&amp;quot; Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_delete/</guid>
      <description>ark delete Delete ark resources
Synopsis Delete ark resources
Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_delete_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_delete_backup/</guid>
      <description>ark delete backup Delete a backup
Synopsis Delete a backup
ark delete backup NAME [flags] Options  --confirm Confirm deletion -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_delete_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_delete_restore/</guid>
      <description>ark delete restore Delete a restore
Synopsis Delete a restore
ark delete restore NAME [flags] Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_delete_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_delete_schedule/</guid>
      <description>ark delete schedule Delete a schedule
Synopsis Delete a schedule
ark delete schedule NAME [flags] Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_describe/</guid>
      <description>ark describe Describe ark resources
Synopsis Describe ark resources
Options  -h, --help help for describe Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_describe_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_describe_backups/</guid>
      <description>ark describe backups Describe backups
Synopsis Describe backups
ark describe backups [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for backups -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_describe_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_describe_restores/</guid>
      <description>ark describe restores Describe restores
Synopsis Describe restores
ark describe restores [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for restores -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_describe_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_describe_schedules/</guid>
      <description>ark describe schedules Describe schedules
Synopsis Describe schedules
ark describe schedules [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for schedules -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_plugin/</guid>
      <description>ark plugin Work with plugins
Synopsis Work with plugins
Options  -h, --help help for plugin Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_plugin_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_plugin_add/</guid>
      <description>ark plugin add Add a plugin
Synopsis Add a plugin
ark plugin add IMAGE [flags] Options  -h, --help help for add --image-pull-policy the imagePullPolicy for the plugin container. Valid values are Always, IfNotPresent, Never. (default IfNotPresent) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_plugin_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_plugin_remove/</guid>
      <description>ark plugin remove Remove a plugin
Synopsis Remove a plugin
ark plugin remove [NAME | IMAGE] [flags] Options  -h, --help help for remove Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create [RESTORE_NAME] --from-backup BACKUP_NAME [flags] Examples  # create a restore named &amp;quot;restore-1&amp;quot; from backup &amp;quot;backup-1&amp;quot; ark restore create restore-1 --from-backup backup-1 # create a restore with a default name (&amp;quot;backup-1-&amp;lt;timestamp&amp;gt;&amp;quot;) from backup &amp;quot;backup-1&amp;quot; ark restore create --from-backup backup-1 Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_restore_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_restore_describe/</guid>
      <description>ark restore describe Describe restores
Synopsis Describe restores
ark restore describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis The &amp;ndash;schedule flag is required, in cron notation:
   Character Position Character Period Acceptable Values     1 Minute 0-59,*   2 Hour 0-23,*   3 Day of Month 1-31,*   4 Month 1-12,*   5 Day of Week 0-7,*    ark schedule create NAME --schedule [flags] Examples ark create schedule NAME --schedule=&amp;quot;0 */6 * * *&amp;quot; Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_schedule_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_schedule_describe/</guid>
      <description>ark schedule describe Describe schedules
Synopsis Describe schedules
ark schedule describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) --plugin-dir string directory containing Ark plugins (default &amp;quot;/plugins&amp;quot;) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
 The files in the CLI reference directory in the repository enumerate each of the possible ark commands and their flags. This information is available in the CLI, using the --help flag.
Running the client We recommend that you download a pre-built release, but you can also build and run the ark executable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/cloud-common/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/cloud-common/</guid>
      <description>Set up Ark with your cloud provider To run Ark with your cloud provider, you specify provider-specific settings for the Ark server. In version 0.7.0 and later, you can run Ark in any namespace, which requires additional customization. See Run in custom namespace.
The Ark repository includes a set of example YAML files that specify the settings for each cloud provider. For provider-specific instructions, see:
  Run Ark on AWS  Run Ark on GCP  Run Ark on Azure  Use IBM Cloud Object Store as Ark&amp;rsquo;s storage destination  Examples After you set up the Ark server, try these examples:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/debugging-deletes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/debugging-deletes/</guid>
      <description>Ark version 0.7.0 and later: issue with deleting namespaces and backups Version 0.7.0 introduced the ability to delete backups. However, you may encounter an issue if you try to delete the heptio-ark namespace. The namespace can get stuck in a terminating state, and you cannot delete your backups. To fix:
  If you don&amp;rsquo;t have it, install jq.
  Run:
bash &amp;lt;(kubectl -n heptio-ark get backup -o json | jq -c -r $&amp;#39;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Ark client to use. Ark looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Ark controllers are not processing the backups/restores, which usually happens because the Ark server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/extend/</guid>
      <description>Extend Ark Ark includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd istelf. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/gcp-config/</guid>
      <description>Run Ark on GCP You can run Kubernetes on Google Cloud Platform in either of:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Create GCS bucket Heptio Ark requires an object storage bucket in which to store backups. Create a GCS bucket, replacing placeholder appropriately:
gsutil mb gs://&amp;lt;YOUR_BUCKET&amp;gt;/ Create service account To integrate Heptio Ark with GCP, create an Ark-specific Service Account:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Ark versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Ark also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Ark&amp;rsquo;s storage destination. You can deploy Ark on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Ark&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Ark&amp;rsquo;s destination, you:
 Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Ark server  Create COS instance If you don’t have a COS instance, you can create a new one, according to the detailed instructions in Creating a new resource instance.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/namespace/</guid>
      <description>Run in custom namespace In Ark version 0.7.0 and later, you can run Ark in any namespace. To do so, you specify the namespace in the YAML files that configure the Ark server. You then also specify the namespace when you run Ark client commands.
Edit the example files The Ark repository includes a set of examples that you can use to set up your Ark server. The examples place the server and backup/schedule/restore/config data in the heptio-ark namespace.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing an implementation of one of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementation to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #ark-dr channel.
   Debug installation/setup issues
   Delete namespaces and backups
   Debug restores
  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.8.1/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.8.1/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/about/</guid>
      <description>How Ark Works Each Ark operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. The config custom resource specifies core information and options such as cloud provider settings. Ark also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Ark Server to perform a backup. Once created, the Ark Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version ark.heptio.com/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: ark.heptio.com/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/api-types/README/</guid>
      <description>Table of Contents API types   Backup  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/aws-config/</guid>
      <description>Run Ark on AWS To set up Ark on AWS, you:
 Create your S3 bucket Create an AWS IAM user for Ark Configure the server Create a Secret for your credentials  If you do not have the aws CLI locally installed, follow the user guide to set it up.
Create S3 bucket Heptio Ark requires an object storage bucket to store backups in. Create an S3 bucket, replacing placeholders appropriately:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/azure-config/</guid>
      <description>Run Ark on Azure To configure Ark on Azure, you:
 Create your Azure storage account and blob container Create Azure service principal for Ark Configure the server Create a Secret for your credentials  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/build-from-scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/build-from-scratch/</guid>
      <description>Build from source   Prerequisites  Download  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. Version 1.7.5 or later is required to run ark backup delete. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Download Install with go:
go get github.com/heptio/ark The files are installed in $GOPATH/src/github.com/heptio/ark.
Build You can build your Ark image locally on the machine where you run your cluster, or you can push it to a private registry.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark/</guid>
      <description>ark Back up and restore Kubernetes cluster resources.
Synopsis Heptio Ark is a tool for managing disaster recovery, specifically for Kubernetes cluster resources. It provides a simple, configurable, and operationally robust way to back up your application state and associated data.
If you&amp;rsquo;re familiar with kubectl, Ark supports a similar model, allowing you to execute commands such as &amp;lsquo;ark get backup&amp;rsquo; and &amp;lsquo;ark create schedule&amp;rsquo;. The same operations can also be performed as &amp;lsquo;ark backup get&amp;rsquo; and &amp;lsquo;ark schedule create&amp;rsquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup/</guid>
      <description>ark backup Work with backups
Synopsis Work with backups
Options  -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup_create/</guid>
      <description>ark backup create Create a backup
Synopsis Create a backup
ark backup create NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for create --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup_delete/</guid>
      <description>ark backup delete Delete a backup
Synopsis Delete a backup
ark backup delete NAME [flags] Options  --confirm Confirm deletion -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup_describe/</guid>
      <description>ark backup describe Describe backups
Synopsis Describe backups
ark backup describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector --volume-details display details of restic volume backups Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup_download/</guid>
      <description>ark backup download Download a backup
Synopsis Download a backup
ark backup download NAME [flags] Options  --force forces the download and will overwrite file if it exists already -h, --help help for download -o, --output string path to output file. Defaults to &amp;lt;NAME&amp;gt;-data.tar.gz in the current directory --timeout duration maximum time to wait to process download request (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup_get/</guid>
      <description>ark backup get Get backups
Synopsis Get backups
ark backup get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_backup_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_backup_logs/</guid>
      <description>ark backup logs Get backup logs
Synopsis Get backup logs
ark backup logs BACKUP [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_client/</guid>
      <description>ark client Ark client related commands
Synopsis Ark client related commands
Options  -h, --help help for client Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_client_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_client_config/</guid>
      <description>ark client config Get and set client configuration file values
Synopsis Get and set client configuration file values
Options  -h, --help help for config Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_client_config_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_client_config_get/</guid>
      <description>ark client config get Get client configuration file values
Synopsis Get client configuration file values
ark client config get [KEY 1] [KEY 2] [...] [flags] Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_client_config_set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_client_config_set/</guid>
      <description>ark client config set Set client configuration file values
Synopsis Set client configuration file values
ark client config set KEY=VALUE [KEY=VALUE]... [flags] Options  -h, --help help for set Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_completion/</guid>
      <description>ark completion Output shell completion code for the specified shell (bash or zsh)
Synopsis Generate shell completion code.
Auto completion supports both bash and zsh. Output is to STDOUT.
Load the ark completion code for bash into the current shell - source &amp;lt;(ark completion bash)
Load the ark completion code for zsh into the current shell - source &amp;lt;(ark completion zsh)
ark completion SHELL [flags] Options  -h, --help help for completion Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_create/</guid>
      <description>ark create Create ark resources
Synopsis Create ark resources
Options  -h, --help help for create Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_create_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_create_backup/</guid>
      <description>ark create backup Create a backup
Synopsis Create a backup
ark create backup NAME [flags] Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.group, such as storageclasses.storage.k8s.io -h, --help help for backup --include-cluster-resources optionalBool[=true] include cluster-scoped resources in the backup --include-namespaces stringArray namespaces to include in the backup (use &#39;*&#39; for all namespaces) (default *) --include-resources stringArray resources to include in the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_create_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_create_restore/</guid>
      <description>ark create restore Create a restore
Synopsis Create a restore
ark create restore [RESTORE_NAME] --from-backup BACKUP_NAME [flags] Examples  # create a restore named &amp;quot;restore-1&amp;quot; from backup &amp;quot;backup-1&amp;quot; ark restore create restore-1 --from-backup backup-1 # create a restore with a default name (&amp;quot;backup-1-&amp;lt;timestamp&amp;gt;&amp;quot;) from backup &amp;quot;backup-1&amp;quot; ark restore create --from-backup backup-1 Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_create_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_create_schedule/</guid>
      <description>ark create schedule Create a schedule
Synopsis The &amp;ndash;schedule flag is required, in cron notation:
   Character Position Character Period Acceptable Values     1 Minute 0-59,*   2 Hour 0-23,*   3 Day of Month 1-31,*   4 Month 1-12,*   5 Day of Week 0-7,*    ark create schedule NAME --schedule [flags] Examples ark create schedule NAME --schedule=&amp;quot;0 */6 * * *&amp;quot; Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_delete/</guid>
      <description>ark delete Delete ark resources
Synopsis Delete ark resources
Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_delete_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_delete_backup/</guid>
      <description>ark delete backup Delete a backup
Synopsis Delete a backup
ark delete backup NAME [flags] Options  --confirm Confirm deletion -h, --help help for backup Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_delete_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_delete_restore/</guid>
      <description>ark delete restore Delete a restore
Synopsis Delete a restore
ark delete restore NAME [flags] Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_delete_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_delete_schedule/</guid>
      <description>ark delete schedule Delete a schedule
Synopsis Delete a schedule
ark delete schedule NAME [flags] Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_describe/</guid>
      <description>ark describe Describe ark resources
Synopsis Describe ark resources
Options  -h, --help help for describe Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_describe_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_describe_backups/</guid>
      <description>ark describe backups Describe backups
Synopsis Describe backups
ark describe backups [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for backups -l, --selector string only show items matching this label selector --volume-details display details of restic volume backups Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_describe_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_describe_restores/</guid>
      <description>ark describe restores Describe restores
Synopsis Describe restores
ark describe restores [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for restores -l, --selector string only show items matching this label selector --volume-details display details of restic volume restores Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_describe_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_describe_schedules/</guid>
      <description>ark describe schedules Describe schedules
Synopsis Describe schedules
ark describe schedules [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for schedules -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_get/</guid>
      <description>ark get Get ark resources
Synopsis Get ark resources
Options  -h, --help help for get Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_get_backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_get_backups/</guid>
      <description>ark get backups Get backups
Synopsis Get backups
ark get backups [flags] Options  -h, --help help for backups --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_get_restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_get_restores/</guid>
      <description>ark get restores Get restores
Synopsis Get restores
ark get restores [flags] Options  -h, --help help for restores --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_get_schedules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_get_schedules/</guid>
      <description>ark get schedules Get schedules
Synopsis Get schedules
ark get schedules [flags] Options  -h, --help help for schedules --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_plugin/</guid>
      <description>ark plugin Work with plugins
Synopsis Work with plugins
Options  -h, --help help for plugin Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_plugin_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_plugin_add/</guid>
      <description>ark plugin add Add a plugin
Synopsis Add a plugin
ark plugin add IMAGE [flags] Options  -h, --help help for add --image-pull-policy the imagePullPolicy for the plugin container. Valid values are Always, IfNotPresent, Never. (default IfNotPresent) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_plugin_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_plugin_remove/</guid>
      <description>ark plugin remove Remove a plugin
Synopsis Remove a plugin
ark plugin remove [NAME | IMAGE] [flags] Options  -h, --help help for remove Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restic/</guid>
      <description>ark restic Work with restic
Synopsis Work with restic
Options  -h, --help help for restic Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restic_repo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restic_repo/</guid>
      <description>ark restic repo Work with restic repositories
Synopsis Work with restic repositories
Options  -h, --help help for repo Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restic_repo_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restic_repo_get/</guid>
      <description>ark restic repo get Get restic repositories
Synopsis Get restic repositories
ark restic repo get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restic_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restic_server/</guid>
      <description>ark restic server Run the ark restic server
Synopsis Run the ark restic server
ark restic server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restore/</guid>
      <description>ark restore Work with restores
Synopsis Work with restores
Options  -h, --help help for restore Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restore_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restore_create/</guid>
      <description>ark restore create Create a restore
Synopsis Create a restore
ark restore create [RESTORE_NAME] --from-backup BACKUP_NAME [flags] Examples  # create a restore named &amp;quot;restore-1&amp;quot; from backup &amp;quot;backup-1&amp;quot; ark restore create restore-1 --from-backup backup-1 # create a restore with a default name (&amp;quot;backup-1-&amp;lt;timestamp&amp;gt;&amp;quot;) from backup &amp;quot;backup-1&amp;quot; ark restore create --from-backup backup-1 Options  --exclude-namespaces stringArray namespaces to exclude from the restore --exclude-resources stringArray resources to exclude from the restore, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restore_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restore_delete/</guid>
      <description>ark restore delete Delete a restore
Synopsis Delete a restore
ark restore delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restore_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restore_describe/</guid>
      <description>ark restore describe Describe restores
Synopsis Describe restores
ark restore describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector --volume-details display details of restic volume restores Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restore_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restore_get/</guid>
      <description>ark restore get Get restores
Synopsis Get restores
ark restore get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_restore_logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_restore_logs/</guid>
      <description>ark restore logs Get restore logs
Synopsis Get restore logs
ark restore logs RESTORE [flags] Options  -h, --help help for logs --timeout duration how long to wait to receive logs (default 1m0s) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_schedule/</guid>
      <description>ark schedule Work with schedules
Synopsis Work with schedules
Options  -h, --help help for schedule Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver. If unset defaults to whatever your current-context is (kubectl config current-context) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files -n, --namespace string The namespace in which Ark should operate (default &amp;quot;heptio-ark&amp;quot;) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging SEE ALSO   ark	- Back up and restore Kubernetes cluster resources.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_schedule_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_schedule_create/</guid>
      <description>ark schedule create Create a schedule
Synopsis The &amp;ndash;schedule flag is required, in cron notation:
   Character Position Character Period Acceptable Values     1 Minute 0-59,*   2 Hour 0-23,*   3 Day of Month 1-31,*   4 Month 1-12,*   5 Day of Week 0-7,*    ark schedule create NAME --schedule [flags] Examples ark create schedule NAME --schedule=&amp;quot;0 */6 * * *&amp;quot; Options  --exclude-namespaces stringArray namespaces to exclude from the backup --exclude-resources stringArray resources to exclude from the backup, formatted as resource.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_schedule_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_schedule_delete/</guid>
      <description>ark schedule delete Delete a schedule
Synopsis Delete a schedule
ark schedule delete NAME [flags] Options  -h, --help help for delete Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_schedule_describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_schedule_describe/</guid>
      <description>ark schedule describe Describe schedules
Synopsis Describe schedules
ark schedule describe [NAME1] [NAME2] [NAME...] [flags] Options  -h, --help help for describe -l, --selector string only show items matching this label selector Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_schedule_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_schedule_get/</guid>
      <description>ark schedule get Get schedules
Synopsis Get schedules
ark schedule get [flags] Options  -h, --help help for get --label-columns stringArray a comma-separated list of labels to be displayed as columns -o, --output string Output display format. For create commands, display the object but do not send it to the server. Valid formats are &#39;table&#39;, &#39;json&#39;, and &#39;yaml&#39;. (default &amp;quot;table&amp;quot;) -l, --selector string only show items matching this label selector --show-labels show labels in the last column Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_server/</guid>
      <description>ark server Run the ark server
Synopsis Run the ark server
ark server [flags] Options  -h, --help help for server --log-level the level at which to log. Valid values are debug, info, warning, error, fatal, panic. (default info) --metrics-address string the address to expose prometheus metrics (default &amp;quot;:8085&amp;quot;) --plugin-dir string directory containing Ark plugins (default &amp;quot;/plugins&amp;quot;) Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/ark_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/ark_version/</guid>
      <description>ark version Print the ark version and associated image
Synopsis Print the ark version and associated image
ark version [flags] Options  -h, --help help for version Options inherited from parent commands  --alsologtostderr log to standard error as well as files --kubeconfig string Path to the kubeconfig file to use to talk to the Kubernetes apiserver. If unset, try the environment variable KUBECONFIG, as well as in-cluster configuration --kubecontext string The context to use to talk to the Kubernetes apiserver.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/cli-reference/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/cli-reference/README/</guid>
      <description>Command line reference The Ark client provides a CLI that allows you to initiate ad-hoc backups, scheduled backups, or restores.
 The files in the CLI reference directory in the repository enumerate each of the possible ark commands and their flags. This information is available in the CLI, using the --help flag.
Running the client We recommend that you download a pre-built release, but you can also build and run the ark executable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/config-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/config-definition/</guid>
      <description>Ark Config definition   Overview  Example  Parameter Reference   Main config  AWS  GCP  Azure    Overview Heptio Ark defines its own Config object (a custom resource) for specifying Ark backup and cloud provider settings. When the Ark server is first deployed, it waits until you create a Config&amp;ndash;specifically one named default&amp;ndash;in the heptio-ark namespace.
 NOTE: There is an underlying assumption that you&amp;rsquo;re running the Ark server as a Kubernetes deployment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Ark client to use. Ark looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Ark controllers are not processing the backups/restores, which usually happens because the Ark server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Heptio Ark finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from ark restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use ark restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/extend/</guid>
      <description>Extend Ark Ark includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/faq/</guid>
      <description>FAQ When is it appropriate to use Ark instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Ark is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/gcp-config/</guid>
      <description>Run Ark on GCP You can run Kubernetes on Google Cloud Platform in either of:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Create GCS bucket Heptio Ark requires an object storage bucket in which to store backups. Create a GCS bucket, replacing placeholder appropriately:
gsutil mb gs://&amp;lt;YOUR_BUCKET&amp;gt;/ Create service account To integrate Heptio Ark with GCP, create an Ark-specific Service Account:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/hooks/</guid>
      <description>Hooks Heptio Ark currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up.
Ark versions prior to v0.7.0 only support hooks that execute prior to any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks).
As of version v0.7.0, Ark also supports &amp;ldquo;post&amp;rdquo; hooks - these execute after all custom actions have completed, as well as after all the additional items specified by custom actions have been backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Ark&amp;rsquo;s storage destination. You can deploy Ark on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Ark&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Ark&amp;rsquo;s destination, you:
 Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Ark server  Create COS instance If you don’t have a COS instance, you can create a new one, according to the detailed instructions in Creating a new resource instance.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Ark&amp;rsquo;s image tagging policy.
Released versions gcr.io/heptio-images/ark:&amp;lt;SemVer&amp;gt;
Ark follows the Semantic Versioning standard for releases. Each tag in the github.com/heptio/ark repository has a matching image, e.g. gcr.io/heptio-images/ark:v0.8.0.
Latest gcr.io/heptio-images/ark:latest
The latest tag follows the most recently released version of Ark.
Development gcr.io/heptio-images/ark:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/install-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/install-overview/</guid>
      <description>Set up Ark on your platform You can run Ark with a cloud provider or on-premises. For detailed information about the platforms that Ark supports, see Compatible Storage Providers.
In version 0.7.0 and later, you can run Ark in any namespace, which requires additional customization. See Run in custom namespace.
In version 0.9.0 and later, you can use Ark&amp;rsquo;s integration with restic, which requires additional setup. See restic instructions.
Cloud provider The Ark repository includes a set of example YAML files that specify the settings for each supported cloud provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/namespace/</guid>
      <description>Run in custom namespace In Ark version 0.7.0 and later, you can run Ark in any namespace. To do so, you specify the namespace in the YAML files that configure the Ark server. You then also specify the namespace when you run Ark client commands.
Edit the example files The Ark repository includes a set of examples that you can use to set up your Ark server. The examples place the server and backup/schedule/restore/config data in the heptio-ark namespace.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during ark backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Ark server configuration. This subdirectory includes an additional file called ark-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/plugins/</guid>
      <description>Plugins Heptio Ark has a plugin architecture that allows users to add their own custom functionality to Ark backups &amp;amp; restores without having to modify/recompile the core Ark binary. To add custom functionality, users simply create their own binary containing an implementation of one of Ark&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementation to Ark. This binary is added to a container image that serves as an init container for the Ark server pod and copies the binary into a shared emptyDir volume for the Ark server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/quickstart/</guid>
      <description>Getting started The following example sets up the Ark server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster.
NOTE The example lets you explore basic Ark functionality. In the real world, however, you would back your cluster up to external storage.
See Set up Ark on your platform for how to configure Ark for a production environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/restic/</guid>
      <description>Restic Integration As of version 0.9.0, Ark has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic.
Ark has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks). Starting with version 0.6.0, we provide a plugin model that enables anyone to implement additional object and block storage backends, outside the main Ark repository.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/support-matrix/</guid>
      <description>Compatible Storage Providers Ark supports a variety of storage providers for different backup and snapshot operations. As of version 0.6.0, a plugin system allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Ark codebase.
Backup Storage Providers    Provider Owner Contact      AWS S3 Ark Team  Slack, GitHub Issue    Azure Blob Storage Ark Team  Slack, GitHub Issue    Google Cloud Storage Ark Team  Slack, GitHub Issue    S3-Compatible Backup Storage Providers Ark uses Amazon&amp;rsquo;s Go SDK to connect to the S3 API.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #ark-dr channel on the Kubernetes Slack server.
In ark version &amp;gt;= 0.1.0, you can use the ark bug command to open a Github issue by launching a browser window with some prepopulated values. Values included are OS, CPU architecture, kubectl client and server versions (if available) and the ark client version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/use-cases/</guid>
      <description>Use Cases This doc provides sample Ark commands for the following common scenarios:
  Disaster recovery  Cluster migration  Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Heptio Ark looks like the following:
  After you first run the Ark server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v0.9.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v0.9.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/about/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/aws-config/</guid>
      <description>Run Velero on AWS To set up Velero on AWS, you:
 Download an official release of Velero Create your S3 bucket Create an AWS IAM user for Velero Install the server  If you do not have the aws CLI locally installed, follow the user guide to set it up.
Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.
We strongly recommend that you use an official release of Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/azure-config/</guid>
      <description>Run Velero on Azure To configure Velero on Azure, you:
 Download an official release of Velero Create your Azure storage account and blob container Create Azure service principal for Velero Install the server  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/build-from-source/</guid>
      <description>Build from source   Prerequisites  Getting the source  Build  Test  Run  Vendoring dependencies  Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Getting the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Restore-Only Mode
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):
velero schedule create &amp;lt;SCHEDULE NAME&amp;gt; --schedule &amp;quot;0 7 * * *&amp;quot; This creates a Backup object with the name &amp;lt;SCHEDULE NAME&amp;gt;-&amp;lt;TIMESTAMP&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/extend/</guid>
      <description>Extend Velero Velero includes mechanisms for extending the core functionality to meet your individual backup/restore needs:
  Hooks allow you to specify commands to be executed within running pods during a backup. This is useful if you need to run a workload-specific command prior to taking a backup (for example, to flush disk buffers or to freeze a database).  Plugins allow you to develop custom object/block storage back-ends or per-item backup/restore actions that can execute arbitrary logic, including modifying the items being backed up/restored.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/gcp-config/</guid>
      <description>Run Velero on GCP You can run Kubernetes on Google Cloud Platform in either:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.
We strongly recommend that you use an official release of Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/get-started/</guid>
      <description>Getting started The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the docs on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions gcr.io/heptio-images/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. gcr.io/heptio-images/velero:v1.0.0.
Latest gcr.io/heptio-images/velero:latest
The latest tag follows the most recently released version of Velero.
Development gcr.io/heptio-images/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/install-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/install-overview/</guid>
      <description>Set up Velero on your platform You can run Velero with a cloud provider or on-premises. For detailed information about the platforms that Velero supports, see Compatible Storage Providers.
You can run Velero in any namespace, which requires additional customization. See Run in custom namespace.
You can also use Velero&amp;rsquo;s integration with restic, which requires additional setup. See restic instructions.
Cloud provider The Velero client includes an install command to specify the settings for each supported cloud provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/migrating-to-velero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/migrating-to-velero/</guid>
      <description>Migrating from Heptio Ark to Velero As of v0.11.0, Heptio Ark has become Velero. This means the following changes have been made:
 The ark CLI client is now velero. The default Kubernetes namespace and ServiceAccount are now named velero (formerly heptio-ark). The container image name is now gcr.io/heptio-images/velero (formerly gcr.io/heptio-images/ark). CRDs are now under the new velero.io API group name (formerly ark.heptio.com).  The following instructions will help you migrate your existing Ark installation to Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/namespace/</guid>
      <description>Run in custom namespace You can run Velero in any namespace.
First, ensure you&amp;rsquo;ve downloaded &amp;amp; extracted the latest release.
Then, install Velero using the --namespace flag:
velero install --bucket &amp;lt;YOUR_BUCKET&amp;gt; --provider &amp;lt;YOUR_PROVIDER&amp;gt; --namespace &amp;lt;YOUR_NAMESPACE&amp;gt; Specify the namespace in client commands To specify the namespace for all Velero client commands, run:
velero client config set namespace=&amp;lt;NAMESPACE_VALUE&amp;gt; </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/support-matrix/</guid>
      <description>Supported Kubernetes Versions  In general, Velero works on Kubernetes version 1.7 or later (when Custom Resource Definitions were introduced). Restic support requires Kubernetes version 1.10 or later, or an earlier version with the mount propagation feature enabled. See Restic Integration.  Compatible Storage Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
See also:
  Debug installation/setup issues  Debug restores  General troubleshooting information You can use the velero bug command to open a Github issue by launching a browser window with some prepopulated values. Values included are OS, CPU architecture, kubectl client and server versions (if available) and the velero client version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/upgrade-to-1.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/upgrade-to-1.0/</guid>
      <description>Upgrading to Velero 1.0 Prerequisites  Velero v0.11 installed. If you&amp;rsquo;re not already on v0.11, see the instructions for upgrading to v0.11. Upgrading directly from v0.10.x or earlier to v1.0 is not supported! (Optional, but strongly recommended) Create a full copy of the object storage bucket(s) Velero is using. Part 1 of the upgrade procedure will modify the contents of the bucket, so we recommend creating a backup copy of it prior to upgrading.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.0.0/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.0.0/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/about/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/aws-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/aws-config/</guid>
      <description>Run Velero on AWS To set up Velero on AWS, you:
 Download an official release of Velero Create your S3 bucket Create an AWS IAM user for Velero Install the server  If you do not have the aws CLI locally installed, follow the user guide to set it up.
Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.
We strongly recommend that you use an official release of Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/azure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/azure-config/</guid>
      <description>Run Velero on Azure To configure Velero on Azure, you:
 Download an official release of Velero Create your Azure storage account and blob container Create Azure service principal for Velero Install the server  If you do not have the az Azure CLI 2.0 installed locally, follow the install guide to set it up.
Run:
az login Kubernetes cluster prerequisites Ensure that the VMs for your agent pool allow Managed Disks.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true Please note, in v1.1.0 the label will not be honoured for &amp;ldquo;additional items&amp;rdquo; eg; PVCs/PVs that are in use by a pod that is being backed up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types  Run generate-proto.sh to regenerate files if you make the following changes:
 Add/edit/remove protobuf message or service definitions. These changes require the proto compiler and compiler plugin protoc-gen-go version v1.0.0.  The following files are automatically generated from the source code:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/gcp-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/gcp-config/</guid>
      <description>Run Velero on GCP You can run Kubernetes on Google Cloud Platform in either:
 Kubernetes on Google Compute Engine virtual machines Google Kubernetes Engine  If you do not have the gcloud and gsutil CLIs locally installed, follow the user guide to set them up.
Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.
We strongly recommend that you use an official release of Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/get-started/</guid>
      <description>Getting started The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the docs on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions gcr.io/heptio-images/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. gcr.io/heptio-images/velero:v1.0.0.
Latest gcr.io/heptio-images/velero:latest
The latest tag follows the most recently released version of Velero.
Development gcr.io/heptio-images/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/install-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/install-overview/</guid>
      <description>Set up Velero on your platform You can run Velero with a cloud provider or on-premises. For detailed information about the platforms that Velero supports, see Compatible Storage Providers.
You can run Velero in any namespace, which requires additional customization. See Run in custom namespace.
You can also use Velero&amp;rsquo;s integration with restic, which requires additional setup. See restic instructions.
Cloud provider The Velero client includes an install command to specify the settings for each supported cloud provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/migrating-to-velero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/migrating-to-velero/</guid>
      <description>Migrating from Heptio Ark to Velero As of v0.11.0, Heptio Ark has become Velero. This means the following changes have been made:
 The ark CLI client is now velero. The default Kubernetes namespace and ServiceAccount are now named velero (formerly heptio-ark). The container image name is now gcr.io/heptio-images/velero (formerly gcr.io/heptio-images/ark). CRDs are now under the new velero.io API group name (formerly ark.heptio.com).  The following instructions will help you migrate your existing Ark installation to Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/namespace/</guid>
      <description>Run in custom namespace You can run Velero in any namespace.
First, ensure you&amp;rsquo;ve downloaded &amp;amp; extracted the latest release.
Then, install Velero using the --namespace flag:
velero install --bucket &amp;lt;YOUR_BUCKET&amp;gt; --provider &amp;lt;YOUR_PROVIDER&amp;gt; --namespace &amp;lt;YOUR_NAMESPACE&amp;gt; Specify the namespace in client commands To specify the namespace for all Velero client commands, run:
velero client config set namespace=&amp;lt;NAMESPACE_VALUE&amp;gt; </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 Changing PV/PVC Storage Classes Velero can change the storage class of persistent volumes and persistent volume claims during restores. To configure a storage class mapping, create a config map in the Velero namespace like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/support-matrix/</guid>
      <description>Supported Kubernetes Versions  In general, Velero works on Kubernetes version 1.7 or later (when Custom Resource Definitions were introduced). Restic support requires Kubernetes version 1.10 or later, or an earlier version with the mount propagation feature enabled. See Restic Integration.  Compatible Storage Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
See also:
  Debug installation/setup issues  Debug restores  General troubleshooting information You can use the velero bug command to open a Github issue by launching a browser window with some prepopulated values. Values included are OS, CPU architecture, kubectl client and server versions (if available) and the velero client version.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/upgrade-to-1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/upgrade-to-1.1/</guid>
      <description>Upgrading to Velero 1.1 Prerequisites   Velero v1.0 installed.  Velero v1.1 only requires user intervention if Velero is running in a namespace other than velero.
Instructions Adding VELERO_NAMESPACE environment variable to the deployment Previous versions of Velero&amp;rsquo;s server detected the namespace in which it was running by inspecting the container&amp;rsquo;s filesystem. With v1.1, this is no longer the case, and the server must be made aware of the namespace it is running in with the VELERO_NAMESPACE environment variable.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.1.0/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.1.0/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  Schedule  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/api-types/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/api-types/schedule/</guid>
      <description>Schedule API Type Use The Schedule API type is used as a repeatable request for the Velero server to perform a backup for a given cron notation. Once created, the Velero Server will start the backup process. It will then wait for the next valid point of the given cron expression and execute the backup process on a repeating basis.
API GroupVersion Schedule belongs to the API group version velero.io/v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/basic-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/basic-install/</guid>
      <description>Basic Install   Basic Install   Prerequisites  Install the CLI   Option 1: macOS - Homebrew  Option 2: GitHub release    Install and configure the server components    Use this doc to get a basic installation of Velero. Refer this document to customize your installation.
Prerequisites  Access to a Kubernetes cluster, v1.10 or later, with DNS and container networking enabled. kubectl installed locally  Velero uses object storage to store backups and associated artifacts.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/code-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/code-standards/</guid>
      <description>Code Standards Adding a changelog Authors are expected to include a changelog file with their pull requests. The changelog file should be a new file created in the changelogs/unreleased folder. The file should follow the naming convention of pr-username and the contents of the file should be your text for the changelog.
velero/changelogs/unreleased &amp;lt;- folder 000-username &amp;lt;- file  Add that to the PR.
Code   Log messages are capitalized.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/contributions/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/contributions/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/contributions/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/contributions/minio/</guid>
      <description>Quick start evaluation install with Minio The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the section below on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/contributions/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/contributions/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/custom-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/custom-plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/customize-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/customize-installation/</guid>
      <description>Customize Velero Install   Customize Velero Install   Plugins  Install in any namespace  Use non-file-based identity mechanisms  Enable restic integration  Customize resource requests and limits  Configure more than one storage location for backups or volume snapshots  Do not configure a backup storage location during install  Install an additional volume snapshot provider  Generate YAML only  Additional options  Optional Velero CLI configurations    Plugins During install, Velero requires that at least one plugin is added (with the --plugins flag).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types Add/edit/remove plugin protobuf message or service definitions  The following files are automatically generated from the source code:
 The clientset Listers Shared informers Documentation Protobuf/gRPC types  You can run make verify to ensure that all generated files (clientset, listers, shared informers, docs) are up to date.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/examples/</guid>
      <description>Examples After you set up the Velero server, try these examples:
Basic example (without PersistentVolumes)   Start the sample nginx app:
kubectl apply -f examples/nginx-app/base.yaml   Create a backup:
velero backup create nginx-backup --include-namespaces nginx-example   Simulate a disaster:
kubectl delete namespaces nginx-example Wait for the namespace to be deleted.
  Restore your lost resources:
velero restore create --from-backup nginx-backup   Snapshot example (with PersistentVolumes)  NOTE: For Azure, you must run Kubernetes version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/how-velero-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/how-velero-works/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions velero/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. velero/velero:v1.0.0.
Latest velero/velero:latest
The latest tag follows the most recently released version of Velero.
Development velero/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/namespace/</guid>
      <description>Run in custom namespace You can run Velero in any namespace.
First, ensure you&amp;rsquo;ve downloaded &amp;amp; extracted the latest release.
Then, install Velero using the --namespace flag:
velero install --bucket &amp;lt;YOUR_BUCKET&amp;gt; --provider &amp;lt;YOUR_PROVIDER&amp;gt; --namespace &amp;lt;YOUR_NAMESPACE&amp;gt; Specify the namespace in client commands To specify the namespace for all Velero client commands, run:
velero client config set namespace=&amp;lt;NAMESPACE_VALUE&amp;gt; </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/on-premises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/on-premises/</guid>
      <description>On-Premises Environments You can run Velero in an on-premises cluster in different ways depending on your requirements.
Selecting an object storage provider You must select an object storage backend that Velero can use to store backup data. Supported providers contains information on various options that are supported or have been reported to work by users.
If you do not already have an object storage system, MinIO is an open-source S3-compatible object storage system that can be installed on-premises and is compatible with Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/overview-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/overview-plugins/</guid>
      <description>Velero plugin system Velero uses storage provider plugins to integrate with a variety of storage systems to support backup and snapshot operations.
For server installation, Velero requires that at least one plugin is added (with the --plugins flag). The plugin will be either of the type object store or volume snapshotter, or a plugin that contains both. An exception to this is that when the user is not configuring a backup storage location or a snapshot storage location at the time of install, this flag is optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 What happens when user removes restore objects A restore object represents the restore operation. There are two types of deletion for restore objects:
1. Deleting with velero restore delete This command will delete the custom resource representing it, along with its individual log and results files.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/support-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/support-process/</guid>
      <description>Support Process Weekly Rotation The Velero maintainers use a weekly rotation to manage community support. Each week, a different maintainer is the point person for responding to incoming support issues via Slack, GitHub, and the Google group. The point person is not expected to be on-call 24x7. Instead, they choose one or more hour(s) per day to be available/responding to incoming issues. They will communicate to the community what that time slot will be each week.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/supported-providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/supported-providers/</guid>
      <description>Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Velero supported providers    Provider Object Store Volume Snapshotter Plugin Provider Repo Setup Instructions      Amazon Web Services (AWS) AWS S3 AWS EBS  Velero plugin for AWS  AWS Plugin Setup    Google Cloud Platform (GCP) Google Cloud Storage Google Compute Engine Disks  Velero plugin for GCP  GCP Plugin Setup    Microsoft Azure Azure Blob Storage Azure Managed Disks  Velero plugin for Microsoft Azure  Azure Plugin Setup    Contact: #Velero Slack, GitHub Issues</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
  Troubleshooting   Debug installation/ setup issues  Debug restores  General troubleshooting information   Getting velero debug logs    Known issue with restoring LoadBalancer Service  Miscellaneous issues   Velero reports custom resource not found errors when starting up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/uninstalling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/uninstalling/</guid>
      <description>Uninstalling Velero If you would like to completely uninstall Velero from your cluster, the following commands will remove all resources created by velero install:
kubectl delete namespace/velero clusterrolebinding/velero kubectl delete crds -l component=velero </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/upgrade-to-1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/upgrade-to-1.2/</guid>
      <description>Upgrading to Velero 1.2 Prerequisites  Velero v1.1 or v1.0 installed.  Note: if you&amp;rsquo;re upgrading from v1.0, follow the upgrading to v1.1 instructions first.
Instructions   Install the Velero v1.2 command-line interface (CLI) by following the instructions here.
Verify that you&amp;rsquo;ve properly installed it by running:
velero version --client-only You should see the following output:
Client: Version: v1.2.0 Git commit: &amp;lt;git SHA&amp;gt;   Scale down the existing Velero deployment:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/velero-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/velero-install/</guid>
      <description>Velero Install CLI This document serves as a guide to using the velero install CLI command to install velero server components into your kubernetes cluster.
NOTE: velero install will, by default, use the CLI&amp;rsquo;s version information to determine the version of the server compoents to deploy. This behavior may be overridden by using the --image flag. Refer to Building Server Component Container Images.
Usage This section explains some of the basic flags supported by the velero install CLI command.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/website-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/website-guidelines/</guid>
      <description>Website Guidelines Running the website locally When making changes to the website, please run the site locally before submitting a PR and manually verify your changes.
At the root of the project, run:
make serve-docs This runs all the Ruby dependencies in a container.
Alternatively, for quickly loading the website, under the velero/site/ directory run:
bundle exec jekyll serve --livereload --future For more information on how to run the website locally, please see our jekyll documentation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.2.0/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.2.0/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  Restore  Schedule  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/api-types/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/api-types/restore/</guid>
      <description>Restore API Type Use The Restore API type is used as a request for the Velero server to perform a Restore. Once created, the Velero Server immediately starts the Restore process.
API GroupVersion Restore belongs to the API group version velero.io/v1.
Definition Here is a sample Restore object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Restore # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/api-types/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/api-types/schedule/</guid>
      <description>Schedule API Type Use The Schedule API type is used as a repeatable request for the Velero server to perform a backup for a given cron notation. Once created, the Velero Server will start the backup process. It will then wait for the next valid point of the given cron expression and execute the backup process on a repeating basis.
API GroupVersion Schedule belongs to the API group version velero.io/v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/basic-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/basic-install/</guid>
      <description>Basic Install   Basic Install   Prerequisites  Install the CLI   Option 1: macOS - Homebrew  Option 2: GitHub release    Install and configure the server components  Command line Autocompletion    Use this doc to get a basic installation of Velero. Refer this document to customize your installation.
Prerequisites  Access to a Kubernetes cluster, v1.10 or later, with DNS and container networking enabled.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/code-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/code-standards/</guid>
      <description>Code Standards Adding a changelog Authors are expected to include a changelog file with their pull requests. The changelog file should be a new file created in the changelogs/unreleased folder. The file should follow the naming convention of pr-username and the contents of the file should be your text for the changelog.
velero/changelogs/unreleased &amp;lt;- folder 000-username &amp;lt;- file  Add that to the PR.
Code   Log messages are capitalized.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/contributions/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/contributions/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/contributions/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/contributions/minio/</guid>
      <description>Quick start evaluation install with Minio The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the section below on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/contributions/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/contributions/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/csi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/csi/</guid>
      <description>Container Storage Interface Snapshot Support in Velero This feature is under development. Documentation may not be up-to-date and features may not work as expected.
Velero supports taking Container Storage Interface (CSI) snapshots as a beta feature on clusters that meet the following prerequisites.
 The cluster is Kubernetes version 1.17 or greater. The cluster is running a CSI driver capable of support volume snapshots at the v1beta1 API level. The Velero server is running with the --features EnableCSI feature flag to enable CSI logic in Velero&amp;rsquo;s core.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/custom-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/custom-plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/customize-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/customize-installation/</guid>
      <description>Customize Velero Install   Customize Velero Install   Plugins  Install in any namespace  Use non-file-based identity mechanisms  Enable restic integration  Customize resource requests and limits  Configure more than one storage location for backups or volume snapshots  Do not configure a backup storage location during install  Install an additional volume snapshot provider  Generate YAML only  Additional options  Optional Velero CLI configurations   Enabling shell autocompletion   Bash on Linux   Install bash-completion  Enable Velero CLI autocompletion for Bash on Linux    Bash on macOS   Install bash-completion  Enable Velero CLI autocompletion for Bash on macOS    Autocompletion on Zsh        Plugins During install, Velero requires that at least one plugin is added (with the --plugins flag).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types Add/edit/remove plugin protobuf message or service definitions  The following files are automatically generated from the source code:
 The clientset Listers Shared informers Documentation Protobuf/gRPC types  You can run make verify to ensure that all generated files (clientset, listers, shared informers, docs) are up to date.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/examples/</guid>
      <description>Examples After you set up the Velero server, try these examples:
Basic example (without PersistentVolumes)   Start the sample nginx app:
kubectl apply -f examples/nginx-app/base.yaml   Create a backup:
velero backup create nginx-backup --include-namespaces nginx-example   Simulate a disaster:
kubectl delete namespaces nginx-example Wait for the namespace to be deleted.
  Restore your lost resources:
velero restore create --from-backup nginx-backup   Snapshot example (with PersistentVolumes)  NOTE: For Azure, you must run Kubernetes version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/how-velero-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/how-velero-works/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions velero/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. velero/velero:v1.0.0.
Latest velero/velero:latest
The latest tag follows the most recently released version of Velero.
Development velero/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/namespace/</guid>
      <description>Run in a non-default namespace The Velero installation and backups by default are run in the velero namespace. However, it is possible to use a different namespace.
1) Customize the namespace during install Use the --namespace flag, in conjunction with the other flags in the velero install command (as shown in the the Velero install instructions). This will inform Velero where to install.
2) Customize the namespace for operational commands To have namespace consistency, specify the namespace for all Velero operational commands to be the same as the namespace used to install Velero:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/on-premises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/on-premises/</guid>
      <description>On-Premises Environments You can run Velero in an on-premises cluster in different ways depending on your requirements.
Selecting an object storage provider You must select an object storage backend that Velero can use to store backup data. Supported providers contains information on various options that are supported or have been reported to work by users.
If you do not already have an object storage system, MinIO is an open-source S3-compatible object storage system that can be installed on-premises and is compatible with Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/overview-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/overview-plugins/</guid>
      <description>Velero plugin system Velero uses storage provider plugins to integrate with a variety of storage systems to support backup and snapshot operations.
For server installation, Velero requires that at least one plugin is added (with the --plugins flag). The plugin will be either of the type object store or volume snapshotter, or a plugin that contains both. An exception to this is that when the user is not configuring a backup storage location or a snapshot storage location at the time of install, this flag is optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/release-instructions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/release-instructions/</guid>
      <description>Release Instructions Ahead of Time (GA Only) Release Blog Post PR Prepare a PR containing the release blog post. It&amp;rsquo;s usually easiest to make a copy of the most recent existing post, then replace the content as appropriate.
You also need to update site/index.html to have &amp;ldquo;Latest Release Information&amp;rdquo; contain a link to the new post.
(Pre-Release and GA) Changelog and Docs PR  In a branch, create the file changelogs/CHANGELOG-&amp;lt;major&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 What happens when user removes restore objects A restore object represents the restore operation. There are two types of deletion for restore objects:
1. Deleting with velero restore delete This command will delete the custom resource representing it, along with its individual log and results files.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/support-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/support-process/</guid>
      <description>Support Process Weekly Rotation The Velero maintainers use a weekly rotation to manage community support. Each week, a different maintainer is the point person for responding to incoming support issues via Slack, GitHub, and the Google group. The point person is not expected to be on-call 24x7. Instead, they choose one or more hour(s) per day to be available/responding to incoming issues. They will communicate to the community what that time slot will be each week.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/supported-providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/supported-providers/</guid>
      <description>Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Velero supported providers    Provider Object Store Volume Snapshotter Plugin Provider Repo Setup Instructions      Amazon Web Services (AWS) AWS S3 AWS EBS  Velero plugin for AWS  AWS Plugin Setup    Google Cloud Platform (GCP) Google Cloud Storage Google Compute Engine Disks  Velero plugin for GCP  GCP Plugin Setup    Microsoft Azure Azure Blob Storage Azure Managed Disks  Velero plugin for Microsoft Azure  Azure Plugin Setup    Contact: #Velero Slack, GitHub Issues</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
  Troubleshooting   Debug installation/ setup issues  Debug restores  General troubleshooting information   Getting velero debug logs    Known issue with restoring LoadBalancer Service  Miscellaneous issues   Velero reports custom resource not found errors when starting up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/uninstalling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/uninstalling/</guid>
      <description>Uninstalling Velero If you would like to completely uninstall Velero from your cluster, the following commands will remove all resources created by velero install:
kubectl delete namespace/velero clusterrolebinding/velero kubectl delete crds -l component=velero </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/upgrade-to-1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/upgrade-to-1.3/</guid>
      <description>Upgrading to Velero 1.3 Prerequisites  Velero v1.2 installed.  If you&amp;rsquo;re not yet running Velero v1.2, see the following:
  Upgrading to v1.1  Upgrading to v1.2  Instructions   Install the Velero v1.3 command-line interface (CLI) by following the instructions here.
Verify that you&amp;rsquo;ve properly installed it by running:
velero version --client-only You should see the following output:
Client: Version: v1.3.0 Git commit: &amp;lt;git SHA&amp;gt;   Update the container image used by the Velero deployment and, optionally, the restic daemon set:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/velero-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/velero-install/</guid>
      <description>Velero Install CLI This document serves as a guide to using the velero install CLI command to install velero server components into your kubernetes cluster.
NOTE: velero install will, by default, use the CLI&amp;rsquo;s version information to determine the version of the server compoents to deploy. This behavior may be overridden by using the --image flag. Refer to Building Server Component Container Images.
Usage This section explains some of the basic flags supported by the velero install CLI command.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/website-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/website-guidelines/</guid>
      <description>Website Guidelines Running the website locally When making changes to the website, please run the site locally before submitting a PR and manually verify your changes.
At the root of the project, run:
make serve-docs This runs all the Ruby dependencies in a container.
Alternatively, for quickly loading the website, under the velero/site/ directory run:
bundle exec jekyll serve --livereload --future For more information on how to run the website locally, please see our jekyll documentation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.0/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.0/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  Restore  Schedule  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/api-types/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/api-types/restore/</guid>
      <description>Restore API Type Use The Restore API type is used as a request for the Velero server to perform a Restore. Once created, the Velero Server immediately starts the Restore process.
API GroupVersion Restore belongs to the API group version velero.io/v1.
Definition Here is a sample Restore object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Restore # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/api-types/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/api-types/schedule/</guid>
      <description>Schedule API Type Use The Schedule API type is used as a repeatable request for the Velero server to perform a backup for a given cron notation. Once created, the Velero Server will start the backup process. It will then wait for the next valid point of the given cron expression and execute the backup process on a repeating basis.
API GroupVersion Schedule belongs to the API group version velero.io/v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/basic-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/basic-install/</guid>
      <description>Basic Install   Basic Install   Prerequisites  Install the CLI   Option 1: macOS - Homebrew  Option 2: GitHub release    Install and configure the server components  Command line Autocompletion    Use this doc to get a basic installation of Velero. Refer this document to customize your installation.
Prerequisites  Access to a Kubernetes cluster, v1.10 or later, with DNS and container networking enabled.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/code-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/code-standards/</guid>
      <description>Code Standards Adding a changelog Authors are expected to include a changelog file with their pull requests. The changelog file should be a new file created in the changelogs/unreleased folder. The file should follow the naming convention of pr-username and the contents of the file should be your text for the changelog.
velero/changelogs/unreleased &amp;lt;- folder 000-username &amp;lt;- file  Add that to the PR.
Code   Log messages are capitalized.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/contributions/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/contributions/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/contributions/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/contributions/minio/</guid>
      <description>Quick start evaluation install with Minio The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the section below on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/contributions/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/contributions/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/csi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/csi/</guid>
      <description>Container Storage Interface Snapshot Support in Velero This feature is under development. Documentation may not be up-to-date and features may not work as expected.
Velero supports taking Container Storage Interface (CSI) snapshots as a beta feature on clusters that meet the following prerequisites.
 The cluster is Kubernetes version 1.17 or greater. The cluster is running a CSI driver capable of support volume snapshots at the v1beta1 API level. The Velero server is running with the --features EnableCSI feature flag to enable CSI logic in Velero&amp;rsquo;s core.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/custom-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/custom-plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/customize-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/customize-installation/</guid>
      <description>Customize Velero Install   Customize Velero Install   Plugins  Install in any namespace  Use non-file-based identity mechanisms  Enable restic integration  Customize resource requests and limits  Configure more than one storage location for backups or volume snapshots  Do not configure a backup storage location during install  Install an additional volume snapshot provider  Generate YAML only  Additional options  Optional Velero CLI configurations   Enabling shell autocompletion   Bash on Linux   Install bash-completion  Enable Velero CLI autocompletion for Bash on Linux    Bash on macOS   Install bash-completion  Enable Velero CLI autocompletion for Bash on macOS    Autocompletion on Zsh        Plugins During install, Velero requires that at least one plugin is added (with the --plugins flag).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types Add/edit/remove plugin protobuf message or service definitions  The following files are automatically generated from the source code:
 The clientset Listers Shared informers Documentation Protobuf/gRPC types  You can run make verify to ensure that all generated files (clientset, listers, shared informers, docs) are up to date.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/examples/</guid>
      <description>Examples After you set up the Velero server, try these examples:
Basic example (without PersistentVolumes)   Start the sample nginx app:
kubectl apply -f examples/nginx-app/base.yaml   Create a backup:
velero backup create nginx-backup --include-namespaces nginx-example   Simulate a disaster:
kubectl delete namespaces nginx-example Wait for the namespace to be deleted.
  Restore your lost resources:
velero restore create --from-backup nginx-backup   Snapshot example (with PersistentVolumes)  NOTE: For Azure, you must run Kubernetes version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/how-velero-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/how-velero-works/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions velero/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. velero/velero:v1.0.0.
Latest velero/velero:latest
The latest tag follows the most recently released version of Velero.
Development velero/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/namespace/</guid>
      <description>Run in a non-default namespace The Velero installation and backups by default are run in the velero namespace. However, it is possible to use a different namespace.
1) Customize the namespace during install Use the --namespace flag, in conjunction with the other flags in the velero install command (as shown in the the Velero install instructions). This will inform Velero where to install.
2) Customize the namespace for operational commands To have namespace consistency, specify the namespace for all Velero operational commands to be the same as the namespace used to install Velero:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/on-premises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/on-premises/</guid>
      <description>On-Premises Environments You can run Velero in an on-premises cluster in different ways depending on your requirements.
Selecting an object storage provider You must select an object storage backend that Velero can use to store backup data. Supported providers contains information on various options that are supported or have been reported to work by users.
If you do not already have an object storage system, MinIO is an open-source S3-compatible object storage system that can be installed on-premises and is compatible with Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/overview-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/overview-plugins/</guid>
      <description>Velero plugin system Velero uses storage provider plugins to integrate with a variety of storage systems to support backup and snapshot operations.
For server installation, Velero requires that at least one plugin is added (with the --plugins flag). The plugin will be either of the type object store or volume snapshotter, or a plugin that contains both. An exception to this is that when the user is not configuring a backup storage location or a snapshot storage location at the time of install, this flag is optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/release-instructions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/release-instructions/</guid>
      <description>Release Instructions Ahead of Time (GA Only) Release Blog Post PR Prepare a PR containing the release blog post. It&amp;rsquo;s usually easiest to make a copy of the most recent existing post, then replace the content as appropriate.
You also need to update site/index.html to have &amp;ldquo;Latest Release Information&amp;rdquo; contain a link to the new post.
(Pre-Release and GA) Changelog and Docs PR  In a branch, create the file changelogs/CHANGELOG-&amp;lt;major&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 What happens when user removes restore objects A restore object represents the restore operation. There are two types of deletion for restore objects:
1. Deleting with velero restore delete This command will delete the custom resource representing it, along with its individual log and results files.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/support-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/support-process/</guid>
      <description>Support Process Weekly Rotation The Velero maintainers use a weekly rotation to manage community support. Each week, a different maintainer is the point person for responding to incoming support issues via Slack, GitHub, and the Google group. The point person is not expected to be on-call 24x7. Instead, they choose one or more hour(s) per day to be available/responding to incoming issues. They will communicate to the community what that time slot will be each week.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/supported-providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/supported-providers/</guid>
      <description>Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Velero supported providers    Provider Object Store Volume Snapshotter Plugin Provider Repo Setup Instructions      Amazon Web Services (AWS) AWS S3 AWS EBS  Velero plugin for AWS  AWS Plugin Setup    Google Cloud Platform (GCP) Google Cloud Storage Google Compute Engine Disks  Velero plugin for GCP  GCP Plugin Setup    Microsoft Azure Azure Blob Storage Azure Managed Disks  Velero plugin for Microsoft Azure  Azure Plugin Setup    Contact: #Velero Slack, GitHub Issues</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
  Troubleshooting   Debug installation/ setup issues  Debug restores  General troubleshooting information   Getting velero debug logs    Known issue with restoring LoadBalancer Service  Miscellaneous issues   Velero reports custom resource not found errors when starting up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/uninstalling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/uninstalling/</guid>
      <description>Uninstalling Velero If you would like to completely uninstall Velero from your cluster, the following commands will remove all resources created by velero install:
kubectl delete namespace/velero clusterrolebinding/velero kubectl delete crds -l component=velero </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/upgrade-to-1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/upgrade-to-1.3/</guid>
      <description>Upgrading to Velero 1.3 Prerequisites  Velero v1.3.0 or v1.2 installed.  If you&amp;rsquo;re not yet running at least Velero v1.2, see the following:
  Upgrading to v1.1  Upgrading to v1.2  Instructions   Install the Velero v1.3 command-line interface (CLI) by following the instructions here.
Verify that you&amp;rsquo;ve properly installed it by running:
velero version --client-only You should see the following output:
Client: Version: v1.3.1 Git commit: &amp;lt;git SHA&amp;gt;   Update the container image used by the Velero deployment and, optionally, the restic daemon set:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/velero-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/velero-install/</guid>
      <description>Velero Install CLI This document serves as a guide to using the velero install CLI command to install velero server components into your kubernetes cluster.
NOTE: velero install will, by default, use the CLI&amp;rsquo;s version information to determine the version of the server compoents to deploy. This behavior may be overridden by using the --image flag. Refer to Building Server Component Container Images.
Usage This section explains some of the basic flags supported by the velero install CLI command.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/website-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/website-guidelines/</guid>
      <description>Website Guidelines Running the website locally When making changes to the website, please run the site locally before submitting a PR and manually verify your changes.
At the root of the project, run:
make serve-docs This runs all the Ruby dependencies in a container.
Alternatively, for quickly loading the website, under the velero/site/ directory run:
bundle exec jekyll serve --livereload --future For more information on how to run the website locally, please see our jekyll documentation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.1/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.1/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  Restore  Schedule  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/api-types/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/api-types/restore/</guid>
      <description>Restore API Type Use The Restore API type is used as a request for the Velero server to perform a Restore. Once created, the Velero Server immediately starts the Restore process.
API GroupVersion Restore belongs to the API group version velero.io/v1.
Definition Here is a sample Restore object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Restore # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/api-types/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/api-types/schedule/</guid>
      <description>Schedule API Type Use The Schedule API type is used as a repeatable request for the Velero server to perform a backup for a given cron notation. Once created, the Velero Server will start the backup process. It will then wait for the next valid point of the given cron expression and execute the backup process on a repeating basis.
API GroupVersion Schedule belongs to the API group version velero.io/v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/basic-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/basic-install/</guid>
      <description>Basic Install   Basic Install   Prerequisites  Install the CLI   Option 1: macOS - Homebrew  Option 2: GitHub release    Install and configure the server components  Command line Autocompletion    Use this doc to get a basic installation of Velero. Refer this document to customize your installation.
Prerequisites  Access to a Kubernetes cluster, v1.10 or later, with DNS and container networking enabled.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/code-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/code-standards/</guid>
      <description>Code Standards Adding a changelog Authors are expected to include a changelog file with their pull requests. The changelog file should be a new file created in the changelogs/unreleased folder. The file should follow the naming convention of pr-username and the contents of the file should be your text for the changelog.
velero/changelogs/unreleased &amp;lt;- folder 000-username &amp;lt;- file  Add that to the PR.
Code   Log messages are capitalized.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/contributions/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/contributions/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/contributions/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/contributions/minio/</guid>
      <description>Quick start evaluation install with Minio The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the section below on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/contributions/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/contributions/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/csi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/csi/</guid>
      <description>Container Storage Interface Snapshot Support in Velero This feature is under development. Documentation may not be up-to-date and features may not work as expected.
Prerequisites The following are the prerequisites for using Velero to take Container Storage Interface (CSI) snapshots:
 The cluster is Kubernetes version 1.17 or greater. The cluster is running a CSI driver capable of support volume snapshots at the v1beta1 API level. The Velero server is running with the --features EnableCSI feature flag to enable CSI logic in Velero&amp;rsquo;s core.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/custom-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/custom-plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/customize-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/customize-installation/</guid>
      <description>Customize Velero Install   Customize Velero Install   Plugins  Install in any namespace  Use non-file-based identity mechanisms  Enable restic integration  Customize resource requests and limits  Configure more than one storage location for backups or volume snapshots  Do not configure a backup storage location during install  Install an additional volume snapshot provider  Generate YAML only  Additional options  Optional Velero CLI configurations   Enabling shell autocompletion   Bash on Linux   Install bash-completion  Enable Velero CLI autocompletion for Bash on Linux    Bash on macOS   Install bash-completion  Enable Velero CLI autocompletion for Bash on macOS    Autocompletion on Zsh        Plugins During install, Velero requires that at least one plugin is added (with the --plugins flag).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types Add/edit/remove plugin protobuf message or service definitions  The following files are automatically generated from the source code:
 The clientset Listers Shared informers Documentation Protobuf/gRPC types  You can run make verify to ensure that all generated files (clientset, listers, shared informers, docs) are up to date.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/examples/</guid>
      <description>Examples After you set up the Velero server, try these examples:
Basic example (without PersistentVolumes)   Start the sample nginx app:
kubectl apply -f examples/nginx-app/base.yaml   Create a backup:
velero backup create nginx-backup --include-namespaces nginx-example   Simulate a disaster:
kubectl delete namespaces nginx-example Wait for the namespace to be deleted.
  Restore your lost resources:
velero restore create --from-backup nginx-backup   Snapshot example (with PersistentVolumes)  NOTE: For Azure, you must run Kubernetes version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/how-velero-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/how-velero-works/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions velero/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. velero/velero:v1.0.0.
Latest velero/velero:latest
The latest tag follows the most recently released version of Velero.
Development velero/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/namespace/</guid>
      <description>Run in a non-default namespace The Velero installation and backups by default are run in the velero namespace. However, it is possible to use a different namespace.
1) Customize the namespace during install Use the --namespace flag, in conjunction with the other flags in the velero install command (as shown in the the Velero install instructions). This will inform Velero where to install.
2) Customize the namespace for operational commands To have namespace consistency, specify the namespace for all Velero operational commands to be the same as the namespace used to install Velero:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/on-premises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/on-premises/</guid>
      <description>On-Premises Environments You can run Velero in an on-premises cluster in different ways depending on your requirements.
Selecting an object storage provider You must select an object storage backend that Velero can use to store backup data. Supported providers contains information on various options that are supported or have been reported to work by users.
If you do not already have an object storage system, MinIO is an open-source S3-compatible object storage system that can be installed on-premises and is compatible with Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/overview-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/overview-plugins/</guid>
      <description>Velero plugin system Velero uses storage provider plugins to integrate with a variety of storage systems to support backup and snapshot operations.
For server installation, Velero requires that at least one plugin is added (with the --plugins flag). The plugin will be either of the type object store or volume snapshotter, or a plugin that contains both. An exception to this is that when the user is not configuring a backup storage location or a snapshot storage location at the time of install, this flag is optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/release-instructions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/release-instructions/</guid>
      <description>Release Instructions Ahead of Time (GA Only) Release Blog Post PR Prepare a PR containing the release blog post. It&amp;rsquo;s usually easiest to make a copy of the most recent existing post, then replace the content as appropriate.
You also need to update site/index.html to have &amp;ldquo;Latest Release Information&amp;rdquo; contain a link to the new post.
(Pre-Release and GA) Changelog and Docs PR  In a branch, create the file changelogs/CHANGELOG-&amp;lt;major&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 What happens when user removes restore objects A restore object represents the restore operation. There are two types of deletion for restore objects:
1. Deleting with velero restore delete This command will delete the custom resource representing it, along with its individual log and results files.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/support-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/support-process/</guid>
      <description>Support Process Weekly Rotation The Velero maintainers use a weekly rotation to manage community support. Each week, a different maintainer is the point person for responding to incoming support issues via Slack, GitHub, and the Google group. The point person is not expected to be on-call 24x7. Instead, they choose one or more hour(s) per day to be available/responding to incoming issues. They will communicate to the community what that time slot will be each week.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/supported-providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/supported-providers/</guid>
      <description>Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Velero supported providers    Provider Object Store Volume Snapshotter Plugin Provider Repo Setup Instructions      Amazon Web Services (AWS) AWS S3 AWS EBS  Velero plugin for AWS  AWS Plugin Setup    Google Cloud Platform (GCP) Google Cloud Storage Google Compute Engine Disks  Velero plugin for GCP  GCP Plugin Setup    Microsoft Azure Azure Blob Storage Azure Managed Disks  Velero plugin for Microsoft Azure  Azure Plugin Setup    Contact: #Velero Slack, GitHub Issues</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
  Troubleshooting   Debug installation/ setup issues  Debug restores  General troubleshooting information   Getting velero debug logs    Known issue with restoring LoadBalancer Service  Miscellaneous issues   Velero reports custom resource not found errors when starting up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/uninstalling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/uninstalling/</guid>
      <description>Uninstalling Velero If you would like to completely uninstall Velero from your cluster, the following commands will remove all resources created by velero install:
kubectl delete namespace/velero clusterrolebinding/velero kubectl delete crds -l component=velero </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/upgrade-to-1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/upgrade-to-1.3/</guid>
      <description>Upgrading to Velero 1.3 Prerequisites  Velero v1.3.1, v1.3.0 or v1.2 installed.  If you&amp;rsquo;re not yet running at least Velero v1.2, see the following:
  Upgrading to v1.1  Upgrading to v1.2  Instructions   Install the Velero v1.3 command-line interface (CLI) by following the instructions here.
Verify that you&amp;rsquo;ve properly installed it by running:
velero version --client-only You should see the following output:
Client: Version: v1.3.2 Git commit: &amp;lt;git SHA&amp;gt;   Update the container image used by the Velero deployment and, optionally, the restic daemon set:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/velero-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/velero-install/</guid>
      <description>Velero Install CLI This document serves as a guide to using the velero install CLI command to install velero server components into your kubernetes cluster.
NOTE: velero install will, by default, use the CLI&amp;rsquo;s version information to determine the version of the server compoents to deploy. This behavior may be overridden by using the --image flag. Refer to Building Server Component Container Images.
Usage This section explains some of the basic flags supported by the velero install CLI command.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/website-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/website-guidelines/</guid>
      <description>Website Guidelines Running the website locally When making changes to the website, please run the site locally before submitting a PR and manually verify your changes.
At the root of the project, run:
make serve-docs This runs all the Ruby dependencies in a container.
Alternatively, for quickly loading the website, under the velero/site/ directory run:
bundle exec jekyll serve --livereload --future For more information on how to run the website locally, please see our jekyll documentation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.3.2/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.3.2/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/api-types/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/api-types/backup/</guid>
      <description>Backup API Type Use The Backup API type is used as a request for the Velero server to perform a backup. Once created, the Velero Server immediately starts the backup process.
API GroupVersion Backup belongs to the API group version velero.io/v1.
Definition Here is a sample Backup object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Backup # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/api-types/backupstoragelocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/api-types/backupstoragelocation/</guid>
      <description>Velero Backup Storage Locations Backup Storage Location Velero can store backups in a number of locations. These are represented in the cluster via the BackupStorageLocation CRD.
Velero must have at least one BackupStorageLocation. By default, this is expected to be named default, however the name can be changed by specifying --default-backup-storage-location on velero server. Backups that do not explicitly specify a storage location will be saved to this BackupStorageLocation.
A sample YAML BackupStorageLocation looks like the following:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/api-types/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/api-types/README/</guid>
      <description>Table of Contents API types Here we list the API types that have some functionality that you can only configure via json/yaml vs the velero cli (hooks)
  Backup  Restore  Schedule  BackupStorageLocation  VolumeSnapshotLocation  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/api-types/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/api-types/restore/</guid>
      <description>Restore API Type Use The Restore API type is used as a request for the Velero server to perform a Restore. Once created, the Velero Server immediately starts the Restore process.
API GroupVersion Restore belongs to the API group version velero.io/v1.
Definition Here is a sample Restore object with each of the fields documented:
# Standard Kubernetes API Version declaration. Required. apiVersion: velero.io/v1 # Standard Kubernetes Kind declaration. Required. kind: Restore # Standard Kubernetes metadata.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/api-types/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/api-types/schedule/</guid>
      <description>Schedule API Type Use The Schedule API type is used as a repeatable request for the Velero server to perform a backup for a given cron notation. Once created, the Velero Server will start the backup process. It will then wait for the next valid point of the given cron expression and execute the backup process on a repeating basis.
API GroupVersion Schedule belongs to the API group version velero.io/v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/api-types/volumesnapshotlocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/api-types/volumesnapshotlocation/</guid>
      <description>Velero Volume Snapshot Location Volume Snapshot Location A volume snapshot location is the location in which to store the volume snapshots created for a backup.
Velero can be configured to take snapshots of volumes from multiple providers. Velero also allows you to configure multiple possible VolumeSnapshotLocation per provider, although you can only select one location per provider at backup time.
Each VolumeSnapshotLocation describes a provider + location. These are represented in the cluster via the VolumeSnapshotLocation CRD.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/backup-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/backup-reference/</guid>
      <description>Backup Reference Exclude Specific Items from Backup It is possible to exclude individual items from being backed up, even if they match the resource/namespace/label selectors defined in the backup spec. To do this, label the item as follows:
kubectl label -n &amp;lt;ITEM_NAMESPACE&amp;gt; &amp;lt;RESOURCE&amp;gt;/&amp;lt;NAME&amp;gt; velero.io/exclude-from-backup=true </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/basic-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/basic-install/</guid>
      <description>Basic Install   Basic Install   Prerequisites  Install the CLI   Option 1: macOS - Homebrew  Option 2: GitHub release    Install and configure the server components  Command line Autocompletion    Use this doc to get a basic installation of Velero. Refer this document to customize your installation.
Prerequisites  Access to a Kubernetes cluster, v1.10 or later, with DNS and container networking enabled.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/build-from-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/build-from-source/</guid>
      <description>Build from source Prerequisites  Access to a Kubernetes cluster, version 1.7 or later. A DNS server on the cluster kubectl installed  Go installed (minimum version 1.8)  Get the source Option 1) Get latest (recommended) mkdir $HOME/go export GOPATH=$HOME/go go get github.com/vmware-tanzu/velero Where go is your import path for Go.
For Go development, it is recommended to add the Go import path ($HOME/go in this example) to your path.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/code-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/code-standards/</guid>
      <description>Code Standards Adding a changelog Authors are expected to include a changelog file with their pull requests. The changelog file should be a new file created in the changelogs/unreleased folder. The file should follow the naming convention of pr-username and the contents of the file should be your text for the changelog.
velero/changelogs/unreleased &amp;lt;- folder 000-username &amp;lt;- file  Add that to the PR.
Code   Log messages are capitalized.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/contributions/ibm-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/contributions/ibm-config/</guid>
      <description>Use IBM Cloud Object Storage as Velero&amp;rsquo;s storage destination. You can deploy Velero on IBM Public or Private clouds, or even on any other Kubernetes cluster, but anyway you can use IBM Cloud Object Store as a destination for Velero&amp;rsquo;s backups.
To set up IBM Cloud Object Storage (COS) as Velero&amp;rsquo;s destination, you:
 Download an official release of Velero Create your COS instance Create an S3 bucket Define a service that can store data in the bucket Configure and start the Velero server  Download Velero   Download the latest official release&amp;rsquo;s tarball for your client platform.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/contributions/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/contributions/minio/</guid>
      <description>Quick start evaluation install with Minio The following example sets up the Velero server and client, then backs up and restores a sample application.
For simplicity, the example uses Minio, an S3-compatible storage service that runs locally on your cluster. For additional functionality with this setup, see the section below on how to expose Minio outside your cluster.
NOTE The example lets you explore basic Velero functionality. Configuring Minio for production is out of scope.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/contributions/oracle-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/contributions/oracle-config/</guid>
      <description>Use Oracle Cloud as a Backup Storage Provider for Velero Introduction  Velero is a tool used to backup and migrate Kubernetes applications. Here are the steps to use Oracle Cloud Object Storage as a destination for Velero backups.
  Download Velero  Create A Customer Secret Key  Create An Oracle Object Storage Bucket  Install Velero  Clean Up  Examples  Additional Reading  Download Velero   Download the latest release of Velero to your development environment.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/csi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/csi/</guid>
      <description>Container Storage Interface Snapshot Support in Velero This feature is under development. Documentation may not be up-to-date and features may not work as expected.
Integrating Container Storage Interface (CSI) snapshot support into Velero enables Velero to backup and restore CSI-backed volumes using the Kubernetes CSI Snapshot Beta APIs.
By supporting CSI snapshot APIs, Velero can support any volume provider that has a CSI driver, without requiring a Velero-specific plugin to be available.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/custom-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/custom-plugins/</guid>
      <description>Plugins Velero has a plugin architecture that allows users to add their own custom functionality to Velero backups &amp;amp; restores without having to modify/recompile the core Velero binary. To add custom functionality, users simply create their own binary containing implementations of Velero&amp;rsquo;s plugin kinds (described below), plus a small amount of boilerplate code to expose the plugin implementations to Velero. This binary is added to a container image that serves as an init container for the Velero server pod and copies the binary into a shared emptyDir volume for the Velero server to access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/customize-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/customize-installation/</guid>
      <description>Customize Velero Install   Customize Velero Install   Plugins  Install in any namespace  Use non-file-based identity mechanisms  Enable restic integration  Enable features   Enable server side features  Enable client side features    Customize resource requests and limits  Configure more than one storage location for backups or volume snapshots  Do not configure a backup storage location during install  Install an additional volume snapshot provider  Generate YAML only  Use a storage provider secured by a self-signed certificate  Additional options  Optional Velero CLI configurations   Enabling shell autocompletion   Bash on Linux   Install bash-completion  Enable Velero CLI autocompletion for Bash on Linux    Bash on macOS   Install bash-completion  Enable Velero CLI autocompletion for Bash on macOS    Autocompletion on Zsh        Plugins During install, Velero requires that at least one plugin is added (with the --plugins flag).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/debugging-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/debugging-install/</guid>
      <description>Debugging Installation Issues General invalid configuration: no configuration has been provided This typically means that no kubeconfig file can be found for the Velero client to use. Velero looks for a kubeconfig in the following locations:
 the path specified by the --kubeconfig flag, if any the path specified by the $KUBECONFIG environment variable, if any ~/.kube/config  Backups or restores stuck in New phase This means that the Velero controllers are not processing the backups/restores, which usually happens because the Velero server is not running.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/debugging-restores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/debugging-restores/</guid>
      <description>Debugging Restores   Example  Structure  Example When Velero finishes a Restore, its status changes to &amp;ldquo;Completed&amp;rdquo; regardless of whether or not there are issues during the process. The number of warnings and errors are indicated in the output columns from velero restore get:
NAME BACKUP STATUS WARNINGS ERRORS CREATED SELECTOR backup-test-20170726180512 backup-test Completed 155 76 2017-07-26 11:41:14 -0400 EDT &amp;lt;none&amp;gt; backup-test-20170726180513 backup-test Completed 121 14 2017-07-26 11:48:24 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180514 backup-test-2 Completed 0 0 2017-07-26 13:31:21 -0400 EDT &amp;lt;none&amp;gt; backup-test-2-20170726180515 backup-test-2 Completed 0 1 2017-07-26 13:32:59 -0400 EDT &amp;lt;none&amp;gt; To delve into the warnings and errors into more detail, you can use velero restore describe:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/development/</guid>
      <description>Development Update generated files Run make update to regenerate files if you make the following changes:
 Add/edit/remove command line flags and/or their help text Add/edit/remove commands or subcommands Add new API types Add/edit/remove plugin protobuf message or service definitions  The following files are automatically generated from the source code:
 The clientset Listers Shared informers Documentation Protobuf/gRPC types  You can run make verify to ensure that all generated files (clientset, listers, shared informers, docs) are up to date.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/disaster-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/disaster-case/</guid>
      <description>Disaster recovery Using Schedules and Read-Only Backup Storage Locations
If you periodically back up your cluster&amp;rsquo;s resources, you are able to return to a previous state in case of some unexpected mishap, such as a service outage. Doing so with Velero looks like the following:
  After you first run the Velero server on your cluster, set up a daily backup (replacing &amp;lt;SCHEDULE NAME&amp;gt; in the command as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/examples/</guid>
      <description>Examples After you set up the Velero server, try these examples:
Basic example (without PersistentVolumes)   Start the sample nginx app:
kubectl apply -f examples/nginx-app/base.yaml   Create a backup:
velero backup create nginx-backup --include-namespaces nginx-example   Simulate a disaster:
kubectl delete namespaces nginx-example Wait for the namespace to be deleted.
  Restore your lost resources:
velero restore create --from-backup nginx-backup   Snapshot example (with PersistentVolumes)  NOTE: For Azure, you must run Kubernetes version 1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/faq/</guid>
      <description>FAQ When is it appropriate to use Velero instead of etcd&amp;rsquo;s built in backup/restore? Etcd&amp;rsquo;s backup/restore tooling is good for recovering from data loss in a single etcd cluster. For example, it is a good idea to take a backup of etcd prior to upgrading etcd itself. For more sophisticated management of your Kubernetes cluster backups and restores, we feel that Velero is generally a better approach. It gives you the ability to throw away an unstable cluster and restore your Kubernetes resources and data into a new cluster, which you can&amp;rsquo;t do easily just by backing up and restoring etcd.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/hooks/</guid>
      <description>Hooks Velero currently supports executing commands in containers in pods during a backup.
Backup Hooks When performing a backup, you can specify one or more commands to execute in a container in a pod when that pod is being backed up. The commands can be configured to run before any custom action processing (&amp;ldquo;pre&amp;rdquo; hooks), or after all custom actions have been completed and any additional items specified by custom action have been backed up (&amp;ldquo;post&amp;rdquo; hooks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/how-velero-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/how-velero-works/</guid>
      <description>How Velero Works Each Velero operation &amp;ndash; on-demand backup, scheduled backup, restore &amp;ndash; is a custom resource, defined with a Kubernetes Custom Resource Definition (CRD) and stored in etcd. Velero also includes controllers that process the custom resources to perform backups, restores, and all related operations.
You can back up or restore all objects in your cluster, or you can filter objects by type, namespace, and/or label.
Velero is ideal for the disaster recovery use case, as well as for snapshotting your application state, prior to performing system operations on your cluster (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/image-tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/image-tagging/</guid>
      <description>Image tagging policy This document describes Velero&amp;rsquo;s image tagging policy.
Released versions velero/velero:&amp;lt;SemVer&amp;gt;
Velero follows the Semantic Versioning standard for releases. Each tag in the github.com/vmware-tanzu/velero repository has a matching image, e.g. velero/velero:v1.0.0.
Latest velero/velero:latest
The latest tag follows the most recently released version of Velero.
Development velero/velero:master
The master tag follows the latest commit to land on the master branch.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/img/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/img/README/</guid>
      <description>Some of these diagrams (for instance backup-process.png), have been created on draw.io, using the &amp;ldquo;Include a copy of my diagram&amp;rdquo; option. If you want to make changes to these diagrams, try importing them into draw.io, and you should have access to the original shapes/text that went into the originals.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/locations/</guid>
      <description>Backup Storage Locations and Volume Snapshot Locations Overview Velero has two custom resources, BackupStorageLocation and VolumeSnapshotLocation, that are used to configure where Velero backups and their associated persistent volume snapshots are stored.
A BackupStorageLocation is defined as a bucket, a prefix within that bucket under which all Velero data should be stored, and a set of additional provider-specific fields (e.g. AWS region, Azure storage account, etc.) The API documentation captures the configurable parameters for each in-tree provider.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/migration-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/migration-case/</guid>
      <description>Cluster migration Using Backups and Restores
Velero can help you port your resources from one cluster to another, as long as you point each Velero instance to the same cloud object storage location. In this scenario, we are also assuming that your clusters are hosted by the same cloud provider. Note that Velero does not support the migration of persistent volumes across cloud providers.
  (Cluster 1) Assuming you haven&amp;rsquo;t already been checkpointing your data with the Velero schedule operation, you need to first back up your entire cluster (replacing &amp;lt;BACKUP-NAME&amp;gt; as desired):</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/namespace/</guid>
      <description>Run in a non-default namespace The Velero installation and backups by default are run in the velero namespace. However, it is possible to use a different namespace.
1) Customize the namespace during install Use the --namespace flag, in conjunction with the other flags in the velero install command (as shown in the the Velero install instructions). This will inform Velero where to install.
2) Customize the namespace for operational commands To have namespace consistency, specify the namespace for all Velero operational commands to be the same as the namespace used to install Velero:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/on-premises/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/on-premises/</guid>
      <description>On-Premises Environments You can run Velero in an on-premises cluster in different ways depending on your requirements.
Selecting an object storage provider You must select an object storage backend that Velero can use to store backup data. Supported providers contains information on various options that are supported or have been reported to work by users.
If you do not already have an object storage system, MinIO is an open-source S3-compatible object storage system that can be installed on-premises and is compatible with Velero.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/output-file-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/output-file-format/</guid>
      <description>Output file format A backup is a gzip-compressed tar file whose name matches the Backup API resource&amp;rsquo;s metadata.name (what is specified during velero backup create &amp;lt;NAME&amp;gt;).
In cloud object storage, each backup file is stored in its own subdirectory in the bucket specified in the Velero server configuration. This subdirectory includes an additional file called velero-backup.json. The JSON file lists all information about your associated Backup resource, including any default values.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/overview-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/overview-plugins/</guid>
      <description>Velero plugin system Velero uses storage provider plugins to integrate with a variety of storage systems to support backup and snapshot operations.
For server installation, Velero requires that at least one plugin is added (with the --plugins flag). The plugin will be either of the type object store or volume snapshotter, or a plugin that contains both. An exception to this is that when the user is not configuring a backup storage location or a snapshot storage location at the time of install, this flag is optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/rbac/</guid>
      <description>Run Velero more securely with restrictive RBAC settings By default Velero runs with an RBAC policy of ClusterRole cluster-admin. This is to make sure that Velero can back up or restore anything in your cluster. But cluster-admin access is wide open &amp;ndash; it gives Velero components access to everything in your cluster. Depending on your environment and your security needs, you should consider whether to configure additional RBAC policies with more restrictive access.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/release-instructions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/release-instructions/</guid>
      <description>Release Instructions Ahead of Time (GA Only) Release Blog Post PR Prepare a PR containing the release blog post. It&amp;rsquo;s usually easiest to make a copy of the most recent existing post, then replace the content as appropriate.
You also need to update site/index.html to have &amp;ldquo;Latest Release Information&amp;rdquo; contain a link to the new post.
(Pre-Release and GA) Changelog and Docs PR  In a branch, create the file changelogs/CHANGELOG-&amp;lt;major&amp;gt;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/restic/</guid>
      <description>Restic Integration Velero has support for backing up and restoring Kubernetes volumes using a free open-source backup tool called restic. This support is considered beta quality. Please see the list of limitations to understand if it currently fits your use case.
Velero has always allowed you to take snapshots of persistent volumes as part of your backups if you’re using one of the supported cloud providers’ block storage offerings (Amazon EBS Volumes, Azure Managed Disks, Google Persistent Disks).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/restore-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/restore-reference/</guid>
      <description>Restore Reference Restoring Into a Different Namespace Velero can restore resources into a different namespace than the one they were backed up from. To do this, use the --namespace-mappings flag:
velero restore create RESTORE_NAME \  --from-backup BACKUP_NAME \  --namespace-mappings old-ns-1:new-ns-1,old-ns-2:new-ns-2 What happens when user removes restore objects A restore object represents the restore operation. There are two types of deletion for restore objects:
1. Deleting with velero restore delete This command will delete the custom resource representing it, along with its individual log and results files.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/run-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/run-locally/</guid>
      <description>Run Velero locally in development Running the Velero server locally can speed up iterative development. This eliminates the need to rebuild the Velero server image and redeploy it to the cluster with each change.
Run Velero locally with a remote cluster Velero runs against the Kubernetes API server as the endpoint (as per the kubeconfig configuration), so both the Velero server and client use the same client-go to communicate with Kubernetes.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/self-signed-certificates/</guid>
      <description>Use Velero with a storage provider secured by a self-signed certificate If you are using an S3-Compatible storage provider that is secured with a self-signed certificate, connections to the object store may fail with a certificate signed by unknown authority message. In order to proceed, a certificate bundle may be provided when adding the storage provider.
Trusting a self-signed certificate during installation When using the velero install command, you can use the --cacert flag to provide a path to a PEM-encoded certificate bundle to trust.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/start-contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/start-contributing/</guid>
      <description>Start contributing Before you start  Please familiarize yourself with the Code of Conduct before contributing. Also, see CONTRIBUTING.md for instructions on the developer certificate of origin that we require.  Finding your way around You may join the Velero community and contribute in many different ways, including helping us design or test new features. For any significant feature we consider adding, we start with a design document. You may find a list of currently in progress new designs here: https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/support-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/support-process/</guid>
      <description>Support Process Weekly Rotation The Velero maintainers use a weekly rotation to manage community support. Each week, a different maintainer is the point person for responding to incoming support issues via Slack, GitHub, and the Google group. The point person is not expected to be on-call 24x7. Instead, they choose one or more hour(s) per day to be available/responding to incoming issues. They will communicate to the community what that time slot will be each week.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/supported-providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/supported-providers/</guid>
      <description>Providers Velero supports a variety of storage providers for different backup and snapshot operations. Velero has a plugin system which allows anyone to add compatibility for additional backup and volume storage platforms without modifying the Velero codebase.
Velero supported providers    Provider Object Store Volume Snapshotter Plugin Provider Repo Setup Instructions      Amazon Web Services (AWS) AWS S3 AWS EBS  Velero plugin for AWS  AWS Plugin Setup    Google Cloud Platform (GCP) Google Cloud Storage Google Compute Engine Disks  Velero plugin for GCP  GCP Plugin Setup    Microsoft Azure Azure Blob Storage Azure Managed Disks  Velero plugin for Microsoft Azure  Azure Plugin Setup    VMware vSphere 🚫 vSphere Volumes  VMware vSphere  vSphere Plugin Setup    Contact: #Velero Slack, GitHub Issues</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/troubleshooting/</guid>
      <description>Troubleshooting These tips can help you troubleshoot known issues. If they don&amp;rsquo;t help, you can file an issue, or talk to us on the #velero channel on the Kubernetes Slack server.
  Troubleshooting   Debug installation/ setup issues  Debug restores  General troubleshooting information   Getting velero debug logs    Known issue with restoring LoadBalancer Service  Miscellaneous issues   Velero reports custom resource not found errors when starting up.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/uninstalling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/uninstalling/</guid>
      <description>Uninstalling Velero If you would like to completely uninstall Velero from your cluster, the following commands will remove all resources created by velero install:
kubectl delete namespace/velero clusterrolebinding/velero kubectl delete crds -l component=velero </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/upgrade-to-1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/upgrade-to-1.4/</guid>
      <description>Upgrading to Velero 1.4 Prerequisites  Velero v1.3.x installed.  If you&amp;rsquo;re not yet running at least Velero v1.3, see the following:
  Upgrading to v1.1  Upgrading to v1.2  Upgrading to v1.3  Instructions   Install the Velero v1.4 command-line interface (CLI) by following the instructions here.
Verify that you&amp;rsquo;ve properly installed it by running:
velero version --client-only You should see the following output:
Client: Version: v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/velero-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/velero-install/</guid>
      <description>Velero Install CLI This document serves as a guide to using the velero install CLI command to install velero server components into your kubernetes cluster.
NOTE: velero install will, by default, use the CLI&amp;rsquo;s version information to determine the version of the server compoents to deploy. This behavior may be overridden by using the --image flag. Refer to Building Server Component Container Images.
Usage This section explains some of the basic flags supported by the velero install CLI command.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/vendoring-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/vendoring-dependencies/</guid>
      <description>Vendoring dependencies Overview We are using dep to manage dependencies. You can install it by following these instructions.
Adding a new dependency Run dep ensure. If you want to see verbose output, you can append -v as in dep ensure -v.
Updating an existing dependency Run dep ensure -update &amp;lt;pkg&amp;gt; [&amp;lt;pkg&amp;gt; ...] to update one or more dependencies.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/website-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/website-guidelines/</guid>
      <description>Website Guidelines Running the website locally When making changes to the website, please run the site locally before submitting a PR and manually verify your changes.
At the root of the project, run:
make serve-docs This runs all the Ruby dependencies in a container.
Alternatively, for quickly loading the website, under the velero/site/ directory run:
bundle exec jekyll serve --livereload --future For more information on how to run the website locally, please see our jekyll documentation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/v1.4/zenhub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/v1.4/zenhub/</guid>
      <description>ZenHub As an Open Source community, it is necessary for our work, communication, and collaboration to be done in the open. GitHub provides a central repository for code, pull requests, issues, and documentation. When applicable, we will use Google Docs for design reviews, proposals, and other working documents.
While GitHub issues, milestones, and labels generally work pretty well, the Velero team has found that product planning requires some additional tooling that GitHub projects do not offer.</description>
    </item>
    
    <item>
      <title>Community</title>
      <link>/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/community/</guid>
      <description>Do you want to help build Velero? If you’re a newcomer, check out the “ Good first issue” and “ Help wanted” labels in the Velero repository.
Read how we&amp;rsquo;re using ZenHub for project and roadmap planning.
If you are ready to jump in and test, add code, or help with documentation, follow the instructions on our Start contributing documentation for guidance on how to setup Velero for development.
You can follow the work we do, see our milestones, and our backlog on our ZenHub board.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resources/</guid>
      <description>Here you will find external resources about Velero, such as videos, podcasts, and community articles.
All community meetings   Podcast shows   vSpeaking Podcast Ep 124, with guests Carlisia Campos, Myles Gray and Cormac Hogan: https://blogs.vmware.com/virtualblocks/2019/08/02/vspeaking-podcast-velero/
  Listen to the PodCTL podcast with Carlisia Campos talking about Velero: http://podcast.podctl.com/110399/986641-understanding-project-velero-formerly-ark
  Videos   Kubecon NA 2019 - How to Backup and Restore Your Kubernetes Cluster - Annette Clewett &amp;amp; Dylan Murray, Red Hat:</description>
    </item>
    
  </channel>
</rss>